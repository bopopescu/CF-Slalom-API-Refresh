{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      },
      "DependsOn": []
    },
    "TransformLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-transform"
      },
      "DependsOn": []
    },
    "LoadLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-load"
      },
      "DependsOn": []
    },
    "ExtractLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-extract"
      },
      "DependsOn": []
    },
    "AlDashdailyDashtrafficLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-daily-traffic"
      },
      "DependsOn": []
    },
    "AlDashdailyDashtrafficUnderscorerefreshUnderscore8LogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-daily-traffic_refresh_8"
      },
      "DependsOn": []
    },
    "AlDashdailyDashtrafficUnderscorerefreshUnderscore15LogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-daily-traffic_refresh_15"
      },
      "DependsOn": []
    },
    "AlDashdailyDashtrafficUnderscorerefreshUnderscore22LogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-daily-traffic_refresh_22"
      },
      "DependsOn": []
    },
    "AlDashdailyDashtrafficUnderscorerefreshUnderscore29LogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-daily-traffic_refresh_29"
      },
      "DependsOn": []
    },
    "AlDashmonthlyDashtrafficLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-monthly-traffic"
      },
      "DependsOn": []
    },
    "AlDashdailyDashdwellLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-daily-dwell"
      },
      "DependsOn": []
    },
    "AlDashdailyDashdwellUnderscorerefreshUnderscore8LogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-daily-dwell_refresh_8"
      },
      "DependsOn": []
    },
    "AlDashdailyDashdwellUnderscorerefreshUnderscore15LogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-daily-dwell_refresh_15"
      },
      "DependsOn": []
    },
    "AlDashdailyDashdwellUnderscorerefreshUnderscore22LogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-daily-dwell_refresh_22"
      },
      "DependsOn": []
    },
    "AlDashdailyDashdwellUnderscorerefreshUnderscore29LogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-daily-dwell_refresh_29"
      },
      "DependsOn": []
    },
    "AlDashfrequencyLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-frequency"
      },
      "DependsOn": []
    },
    "AlDashvisitorDashflowLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-visitor-flow"
      },
      "DependsOn": []
    },
    "AlDashcrossvisitorLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-crossvisitor"
      },
      "DependsOn": []
    },
    "AlDashsocialwifiLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-socialwifi"
      },
      "DependsOn": []
    },
    "GfDashgiftcardDashtransactionLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-gf-giftcard-transaction"
      },
      "DependsOn": []
    },
    "GfDashgiftcardDashinfoLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-gf-giftcard-info"
      },
      "DependsOn": []
    },
    "ScheduleDashsalesDashctiDashcategoryLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-schedule-sales-cti-category"
      },
      "DependsOn": []
    },
    "ScheduleDashsalesDashctiDashprojectLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-schedule-sales-cti-project"
      },
      "DependsOn": []
    },
    "ScheduleDashsalesDashctiDashspaceLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-schedule-sales-cti-space"
      },
      "DependsOn": []
    },
    "ScheduleDashsalesDashctiDashstoreLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-schedule-sales-cti-store"
      },
      "DependsOn": []
    },
    "ScheduleDashsalesDashctiDashtenantLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-schedule-sales-cti-tenant"
      },
      "DependsOn": []
    },
    "ScheduleDashsalesDashctiDashunitLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-schedule-sales-cti-unit"
      },
      "DependsOn": []
    },
    "ScheduleDashsalesDashrcisDashcategoryLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-schedule-sales-rcis-category"
      },
      "DependsOn": []
    },
    "BackfillDashsalesDashctiDashcategoryLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-backfill-sales-cti-category"
      },
      "DependsOn": []
    },
    "BackfillDashsalesDashctiDashprojectLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-backfill-sales-cti-project"
      },
      "DependsOn": []
    },
    "BackfillDashsalesDashctiDashspaceLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-backfill-sales-cti-space"
      },
      "DependsOn": []
    },
    "BackfillDashsalesDashctiDashstoreLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-backfill-sales-cti-store"
      },
      "DependsOn": []
    },
    "BackfillDashsalesDashctiDashtenantLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-backfill-sales-cti-tenant"
      },
      "DependsOn": []
    },
    "BackfillDashsalesDashctiDashunitLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-backfill-sales-cti-unit"
      },
      "DependsOn": []
    },
    "BackfillDashsalesDashrcisDashcategoryLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-backfill-sales-rcis-category"
      },
      "DependsOn": []
    },
    "MerakiDashdevicesLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-meraki-devices"
      },
      "DependsOn": []
    },
    "MerakiDashdevicesDashstatusLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cf-domo-loader-dev-meraki-devices-status"
      },
      "DependsOn": []
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "dev",
                  "cf-domo-loader",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cf-domo-loader-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cf-domo-loader-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "kinesis:*",
                    "lambda:*",
                    "s3:*"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "cf-domo-loader",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      },
      "DependsOn": []
    },
    "TransformLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-transform",
        "Handler": "handlers/main.transform",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 300,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader",
            "apikey": "efc5ffe26768428e101139aece9af70b"
          }
        }
      },
      "DependsOn": [
        "TransformLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "LoadLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-load",
        "Handler": "handlers/main.load",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 300,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader",
            "apikey": "efc5ffe26768428e101139aece9af70b"
          }
        }
      },
      "DependsOn": [
        "LoadLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "ExtractLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-extract",
        "Handler": "handlers/main.extract",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 300,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader",
            "merakikey": "7640451cf175e0081031c7b251c8ae125ae6668f",
            "apikey": "efc5ffe26768428e101139aece9af70b",
            "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8",
            "maxretries": 5
          }
        }
      },
      "DependsOn": [
        "ExtractLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "AlDashdailyDashtrafficLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-al-daily-traffic",
        "Handler": "scheduling/aislelabs_dashboard.getDailyTraffic",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader",
            "apikey": "efc5ffe26768428e101139aece9af70b",
            "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
          }
        }
      },
      "DependsOn": [
        "AlDashdailyDashtrafficLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "AlDashdailyDashtrafficUnderscorerefreshUnderscore8LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-al-daily-traffic_refresh_8",
        "Handler": "scheduling/aislelabs_dashboard.getDailyTraffic_refresh_8",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader",
            "apikey": "efc5ffe26768428e101139aece9af70b",
            "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
          }
        }
      },
      "DependsOn": [
        "AlDashdailyDashtrafficUnderscorerefreshUnderscore8LogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "AlDashdailyDashtrafficUnderscorerefreshUnderscore15LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-al-daily-traffic_refresh_15",
        "Handler": "scheduling/aislelabs_dashboard.getDailyTraffic_refresh_15",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader",
            "apikey": "efc5ffe26768428e101139aece9af70b",
            "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
          }
        }
      },
      "DependsOn": [
        "AlDashdailyDashtrafficUnderscorerefreshUnderscore15LogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "AlDashdailyDashtrafficUnderscorerefreshUnderscore22LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-al-daily-traffic_refresh_22",
        "Handler": "scheduling/aislelabs_dashboard.getDailyTraffic_refresh_22",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader",
            "apikey": "efc5ffe26768428e101139aece9af70b",
            "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
          }
        }
      },
      "DependsOn": [
        "AlDashdailyDashtrafficUnderscorerefreshUnderscore22LogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "AlDashdailyDashtrafficUnderscorerefreshUnderscore29LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-al-daily-traffic_refresh_29",
        "Handler": "scheduling/aislelabs_dashboard.getDailyTraffic_refresh_29",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader",
            "apikey": "efc5ffe26768428e101139aece9af70b",
            "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
          }
        }
      },
      "DependsOn": [
        "AlDashdailyDashtrafficUnderscorerefreshUnderscore29LogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "AlDashmonthlyDashtrafficLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-al-monthly-traffic",
        "Handler": "scheduling/aislelabs_dashboard.getMonthlyTraffic",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader",
            "apikey": "efc5ffe26768428e101139aece9af70b",
            "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
          }
        }
      },
      "DependsOn": [
        "AlDashmonthlyDashtrafficLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "AlDashdailyDashdwellLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-al-daily-dwell",
        "Handler": "scheduling/aislelabs_dashboard.getDailyDwell",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader",
            "apikey": "efc5ffe26768428e101139aece9af70b",
            "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
          }
        }
      },
      "DependsOn": [
        "AlDashdailyDashdwellLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "AlDashdailyDashdwellUnderscorerefreshUnderscore8LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-al-daily-dwell_refresh_8",
        "Handler": "scheduling/aislelabs_dashboard.getDailyDwell_refresh_8",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader",
            "apikey": "efc5ffe26768428e101139aece9af70b",
            "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
          }
        }
      },
      "DependsOn": [
        "AlDashdailyDashdwellUnderscorerefreshUnderscore8LogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "AlDashdailyDashdwellUnderscorerefreshUnderscore15LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-al-daily-dwell_refresh_15",
        "Handler": "scheduling/aislelabs_dashboard.getDailyDwell_refresh_15",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader",
            "apikey": "efc5ffe26768428e101139aece9af70b",
            "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
          }
        }
      },
      "DependsOn": [
        "AlDashdailyDashdwellUnderscorerefreshUnderscore15LogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "AlDashdailyDashdwellUnderscorerefreshUnderscore22LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-al-daily-dwell_refresh_22",
        "Handler": "scheduling/aislelabs_dashboard.getDailyDwell_refresh_22",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader",
            "apikey": "efc5ffe26768428e101139aece9af70b",
            "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
          }
        }
      },
      "DependsOn": [
        "AlDashdailyDashdwellUnderscorerefreshUnderscore22LogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "AlDashdailyDashdwellUnderscorerefreshUnderscore29LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-al-daily-dwell_refresh_29",
        "Handler": "scheduling/aislelabs_dashboard.getDailyDwell_refresh_29",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader",
            "apikey": "efc5ffe26768428e101139aece9af70b",
            "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
          }
        }
      },
      "DependsOn": [
        "AlDashdailyDashdwellUnderscorerefreshUnderscore29LogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "AlDashfrequencyLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-al-frequency",
        "Handler": "scheduling/aislelabs_frequency.get",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader",
            "apikey": "efc5ffe26768428e101139aece9af70b",
            "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8",
            "ndays": 30
          }
        }
      },
      "DependsOn": [
        "AlDashfrequencyLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "AlDashvisitorDashflowLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-al-visitor-flow",
        "Handler": "scheduling/aislelabs_visitor_flow.get",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader",
            "apikey": "efc5ffe26768428e101139aece9af70b",
            "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
          }
        }
      },
      "DependsOn": [
        "AlDashvisitorDashflowLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "AlDashcrossvisitorLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-al-crossvisitor",
        "Handler": "scheduling/aislelabs_crossvisitor.get",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader",
            "apikey": "efc5ffe26768428e101139aece9af70b",
            "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
          }
        }
      },
      "DependsOn": [
        "AlDashcrossvisitorLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "AlDashsocialwifiLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-al-socialwifi",
        "Handler": "scheduling/aislelabs_socialwifi.get",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader",
            "apikey": "efc5ffe26768428e101139aece9af70b",
            "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
          }
        }
      },
      "DependsOn": [
        "AlDashsocialwifiLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "GfDashgiftcardDashtransactionLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-gf-giftcard-transaction",
        "Handler": "scheduling/s3_gift_cards.getGiftCardTransaction",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader"
          }
        }
      },
      "DependsOn": [
        "GfDashgiftcardDashtransactionLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "GfDashgiftcardDashinfoLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-gf-giftcard-info",
        "Handler": "scheduling/s3_gift_cards.getGiftCardInfo",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader"
          }
        }
      },
      "DependsOn": [
        "GfDashgiftcardDashinfoLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "ScheduleDashsalesDashctiDashcategoryLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-schedule-sales-cti-category",
        "Handler": "scheduling/s3_sales.schedule_cti_category",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader"
          }
        }
      },
      "DependsOn": [
        "ScheduleDashsalesDashctiDashcategoryLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "ScheduleDashsalesDashctiDashprojectLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-schedule-sales-cti-project",
        "Handler": "scheduling/s3_sales.schedule_cti_project",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader"
          }
        }
      },
      "DependsOn": [
        "ScheduleDashsalesDashctiDashprojectLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "ScheduleDashsalesDashctiDashspaceLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-schedule-sales-cti-space",
        "Handler": "scheduling/s3_sales.schedule_cti_space",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader"
          }
        }
      },
      "DependsOn": [
        "ScheduleDashsalesDashctiDashspaceLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "ScheduleDashsalesDashctiDashstoreLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-schedule-sales-cti-store",
        "Handler": "scheduling/s3_sales.schedule_cti_store",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader"
          }
        }
      },
      "DependsOn": [
        "ScheduleDashsalesDashctiDashstoreLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "ScheduleDashsalesDashctiDashtenantLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-schedule-sales-cti-tenant",
        "Handler": "scheduling/s3_sales.schedule_cti_tenant",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader"
          }
        }
      },
      "DependsOn": [
        "ScheduleDashsalesDashctiDashtenantLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "ScheduleDashsalesDashctiDashunitLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-schedule-sales-cti-unit",
        "Handler": "scheduling/s3_sales.schedule_cti_unit",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader"
          }
        }
      },
      "DependsOn": [
        "ScheduleDashsalesDashctiDashunitLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "ScheduleDashsalesDashrcisDashcategoryLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-schedule-sales-rcis-category",
        "Handler": "scheduling/s3_sales.schedule_rcis_category",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader"
          }
        }
      },
      "DependsOn": [
        "ScheduleDashsalesDashrcisDashcategoryLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "BackfillDashsalesDashctiDashcategoryLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-backfill-sales-cti-category",
        "Handler": "scheduling/s3_sales.backfill_cti_category",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader"
          }
        }
      },
      "DependsOn": [
        "BackfillDashsalesDashctiDashcategoryLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "BackfillDashsalesDashctiDashprojectLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-backfill-sales-cti-project",
        "Handler": "scheduling/s3_sales.backfill_cti_project",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader"
          }
        }
      },
      "DependsOn": [
        "BackfillDashsalesDashctiDashprojectLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "BackfillDashsalesDashctiDashspaceLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-backfill-sales-cti-space",
        "Handler": "scheduling/s3_sales.backfill_cti_space",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader"
          }
        }
      },
      "DependsOn": [
        "BackfillDashsalesDashctiDashspaceLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "BackfillDashsalesDashctiDashstoreLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-backfill-sales-cti-store",
        "Handler": "scheduling/s3_sales.backfill_cti_store",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader"
          }
        }
      },
      "DependsOn": [
        "BackfillDashsalesDashctiDashstoreLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "BackfillDashsalesDashctiDashtenantLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-backfill-sales-cti-tenant",
        "Handler": "scheduling/s3_sales.backfill_cti_tenant",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader"
          }
        }
      },
      "DependsOn": [
        "BackfillDashsalesDashctiDashtenantLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "BackfillDashsalesDashctiDashunitLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-backfill-sales-cti-unit",
        "Handler": "scheduling/s3_sales.backfill_cti_unit",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader"
          }
        }
      },
      "DependsOn": [
        "BackfillDashsalesDashctiDashunitLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "BackfillDashsalesDashrcisDashcategoryLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-backfill-sales-rcis-category",
        "Handler": "scheduling/s3_sales.backfill_rcis_category",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader"
          }
        }
      },
      "DependsOn": [
        "BackfillDashsalesDashrcisDashcategoryLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "MerakiDashdevicesLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-meraki-devices",
        "Handler": "scheduling/meraki.getDevices",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader",
            "merakikey": "7640451cf175e0081031c7b251c8ae125ae6668f"
          }
        }
      },
      "DependsOn": [
        "MerakiDashdevicesLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "MerakiDashdevicesDashstatusLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z/cf-domo-loader.zip"
        },
        "FunctionName": "cf-domo-loader-dev-meraki-devices-status",
        "Handler": "scheduling/meraki.getDevicesStatus",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "log_level": "info",
            "bouncedstreamid": -1,
            "newstreamid": -2,
            "totalstreamid": -3,
            "hourlyFilteredPropertyStreamId": -8,
            "hourlyFilteredSpaceStreamId": -9,
            "hourlyRawPropertyStreamId": -10,
            "hourlyRawSpaceStreamId": -11,
            "dailyFilteredPropertyStreamId": -4,
            "dailyFilteredSpaceStreamId": -5,
            "dailyRawPropertyStreamId": -6,
            "dailyRawSpaceStreamId": -7,
            "dailyPropertyDwellStreamId": -30,
            "dailySpaceDwellStreamId": -80,
            "dailyFloorStreamId": -55,
            "monthlyPropertyDwellStreamId": -31,
            "monthlySpaceDwellStreamId": -81,
            "monthlyFilteredPropertyStreamId": -40,
            "monthlyFilteredSpaceStreamId": -41,
            "monthlyRawPropertyStreamId": -42,
            "monthlyRawSpaceStreamId": -43,
            "frequencyStreamId": -12,
            "crossvisitorStreamId": -13,
            "merakiDevicesStatusStreamId": -15,
            "merakiDevicesStreamId": -14,
            "socialwifiStreamId": -17,
            "giftCardTransactionStreamId": -18,
            "giftCardInfoStreamId": -19,
            "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
            "dbuser": "domo",
            "dbpassword": "CFdomo!loader*_*",
            "dbname": "domoloader",
            "merakikey": "7640451cf175e0081031c7b251c8ae125ae6668f"
          }
        }
      },
      "DependsOn": [
        "MerakiDashdevicesDashstatusLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "AlDashdailyDashtrafficEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(0 9 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "AlDashdailyDashtrafficLambdaFunction",
                "Arn"
              ]
            },
            "Id": "al-daily-trafficSchedule"
          }
        ]
      },
      "DependsOn": []
    },
    "AlDashdailyDashtrafficUnderscorerefreshUnderscore8EventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(30 13 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "AlDashdailyDashtrafficUnderscorerefreshUnderscore8LambdaFunction",
                "Arn"
              ]
            },
            "Id": "al-daily-traffic_refresh_8Schedule"
          }
        ]
      },
      "DependsOn": []
    },
    "AlDashdailyDashtrafficUnderscorerefreshUnderscore15EventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(0 14 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "AlDashdailyDashtrafficUnderscorerefreshUnderscore15LambdaFunction",
                "Arn"
              ]
            },
            "Id": "al-daily-traffic_refresh_15Schedule"
          }
        ]
      },
      "DependsOn": []
    },
    "AlDashdailyDashtrafficUnderscorerefreshUnderscore22EventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(30 14 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "AlDashdailyDashtrafficUnderscorerefreshUnderscore22LambdaFunction",
                "Arn"
              ]
            },
            "Id": "al-daily-traffic_refresh_22Schedule"
          }
        ]
      },
      "DependsOn": []
    },
    "AlDashdailyDashtrafficUnderscorerefreshUnderscore29EventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(00 15 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "AlDashdailyDashtrafficUnderscorerefreshUnderscore29LambdaFunction",
                "Arn"
              ]
            },
            "Id": "al-daily-traffic_refresh_29Schedule"
          }
        ]
      },
      "DependsOn": []
    },
    "AlDashmonthlyDashtrafficEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(30 9 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "AlDashmonthlyDashtrafficLambdaFunction",
                "Arn"
              ]
            },
            "Id": "al-monthly-trafficSchedule"
          }
        ]
      },
      "DependsOn": []
    },
    "AlDashdailyDashdwellEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(0 10 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "AlDashdailyDashdwellLambdaFunction",
                "Arn"
              ]
            },
            "Id": "al-daily-dwellSchedule"
          }
        ]
      },
      "DependsOn": []
    },
    "AlDashdailyDashdwellUnderscorerefreshUnderscore8EventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(30 15 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "AlDashdailyDashdwellUnderscorerefreshUnderscore8LambdaFunction",
                "Arn"
              ]
            },
            "Id": "al-daily-dwell_refresh_8Schedule"
          }
        ]
      },
      "DependsOn": []
    },
    "AlDashdailyDashdwellUnderscorerefreshUnderscore15EventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(0 16 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "AlDashdailyDashdwellUnderscorerefreshUnderscore15LambdaFunction",
                "Arn"
              ]
            },
            "Id": "al-daily-dwell_refresh_15Schedule"
          }
        ]
      },
      "DependsOn": []
    },
    "AlDashdailyDashdwellUnderscorerefreshUnderscore22EventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(30 16 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "AlDashdailyDashdwellUnderscorerefreshUnderscore22LambdaFunction",
                "Arn"
              ]
            },
            "Id": "al-daily-dwell_refresh_22Schedule"
          }
        ]
      },
      "DependsOn": []
    },
    "AlDashdailyDashdwellUnderscorerefreshUnderscore29EventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(0 17 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "AlDashdailyDashdwellUnderscorerefreshUnderscore29LambdaFunction",
                "Arn"
              ]
            },
            "Id": "al-daily-dwell_refresh_29Schedule"
          }
        ]
      },
      "DependsOn": []
    },
    "AlDashvisitorDashflowEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(30 10 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "AlDashvisitorDashflowLambdaFunction",
                "Arn"
              ]
            },
            "Id": "al-visitor-flowSchedule"
          }
        ]
      },
      "DependsOn": []
    },
    "AlDashcrossvisitorEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(0 11 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "AlDashcrossvisitorLambdaFunction",
                "Arn"
              ]
            },
            "Id": "al-crossvisitorSchedule"
          }
        ]
      },
      "DependsOn": []
    },
    "AlDashsocialwifiEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(30 11 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "AlDashsocialwifiLambdaFunction",
                "Arn"
              ]
            },
            "Id": "al-socialwifiSchedule"
          }
        ]
      },
      "DependsOn": []
    },
    "GfDashgiftcardDashtransactionEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(45 12 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "GfDashgiftcardDashtransactionLambdaFunction",
                "Arn"
              ]
            },
            "Id": "gf-giftcard-transactionSchedule"
          }
        ]
      },
      "DependsOn": []
    },
    "GfDashgiftcardDashinfoEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(30 12 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "GfDashgiftcardDashinfoLambdaFunction",
                "Arn"
              ]
            },
            "Id": "gf-giftcard-infoSchedule"
          }
        ]
      },
      "DependsOn": []
    },
    "ApiGatewayMethodV1AislelabsDailytrafficGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayResourceV1AislelabsDailytraffic"
          ]
        },
        "RestApiId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayRestApi"
          ]
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AlDashdailyDashtrafficUnderscorerefreshUnderscore29LambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "APINestedStack"
      ]
    },
    "ApiGatewayMethodV1AislelabsMonthlytrafficGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayResourceV1AislelabsMonthlytraffic"
          ]
        },
        "RestApiId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayRestApi"
          ]
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AlDashmonthlyDashtrafficLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "APINestedStack"
      ]
    },
    "ApiGatewayMethodV1AislelabsDailydwellGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayResourceV1AislelabsDailydwell"
          ]
        },
        "RestApiId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayRestApi"
          ]
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AlDashdailyDashdwellUnderscorerefreshUnderscore29LambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "APINestedStack"
      ]
    },
    "ApiGatewayMethodV1AislelabsFrequencyGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayResourceV1AislelabsFrequency"
          ]
        },
        "RestApiId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayRestApi"
          ]
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AlDashfrequencyLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "APINestedStack"
      ]
    },
    "ApiGatewayMethodV1AislelabsVisitorflowGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayResourceV1AislelabsVisitorflow"
          ]
        },
        "RestApiId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayRestApi"
          ]
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AlDashvisitorDashflowLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "APINestedStack"
      ]
    },
    "ApiGatewayMethodV1AislelabsCrossvisitorGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayResourceV1AislelabsCrossvisitor"
          ]
        },
        "RestApiId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayRestApi"
          ]
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AlDashcrossvisitorLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "APINestedStack"
      ]
    },
    "ApiGatewayMethodV1AislelabsSocialwifiGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayResourceV1AislelabsSocialwifi"
          ]
        },
        "RestApiId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayRestApi"
          ]
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AlDashsocialwifiLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "APINestedStack"
      ]
    },
    "ApiGatewayMethodV1GiftcardGiftcardtransactionGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayResourceV1GiftcardGiftcardtransaction"
          ]
        },
        "RestApiId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayRestApi"
          ]
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GfDashgiftcardDashtransactionLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "APINestedStack"
      ]
    },
    "ApiGatewayMethodV1GiftcardGiftcardinfoGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayResourceV1GiftcardGiftcardinfo"
          ]
        },
        "RestApiId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayRestApi"
          ]
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GfDashgiftcardDashinfoLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "APINestedStack"
      ]
    },
    "ApiGatewayMethodV1SchedulesalescticategoryGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayResourceV1Schedulesalescticategory"
          ]
        },
        "RestApiId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayRestApi"
          ]
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ScheduleDashsalesDashctiDashcategoryLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "APINestedStack"
      ]
    },
    "ApiGatewayMethodV1SchedulesalesctiprojectGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayResourceV1Schedulesalesctiproject"
          ]
        },
        "RestApiId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayRestApi"
          ]
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ScheduleDashsalesDashctiDashprojectLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "APINestedStack"
      ]
    },
    "ApiGatewayMethodV1SchedulesalesctispaceGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayResourceV1Schedulesalesctispace"
          ]
        },
        "RestApiId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayRestApi"
          ]
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ScheduleDashsalesDashctiDashspaceLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "APINestedStack"
      ]
    },
    "ApiGatewayMethodV1SchedulesalesctistoreGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayResourceV1Schedulesalesctistore"
          ]
        },
        "RestApiId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayRestApi"
          ]
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ScheduleDashsalesDashctiDashstoreLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "APINestedStack"
      ]
    },
    "ApiGatewayMethodV1SchedulesalesctitenantGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayResourceV1Schedulesalesctitenant"
          ]
        },
        "RestApiId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayRestApi"
          ]
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ScheduleDashsalesDashctiDashtenantLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "APINestedStack"
      ]
    },
    "ApiGatewayMethodV1SchedulesalesctiunitGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayResourceV1Schedulesalesctiunit"
          ]
        },
        "RestApiId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayRestApi"
          ]
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ScheduleDashsalesDashctiDashunitLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "APINestedStack"
      ]
    },
    "ApiGatewayMethodV1SchedulesalesrciscategoryGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayResourceV1Schedulesalesrciscategory"
          ]
        },
        "RestApiId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayRestApi"
          ]
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ScheduleDashsalesDashrcisDashcategoryLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "APINestedStack"
      ]
    },
    "ApiGatewayMethodV1BackfillsalescticategoryGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayResourceV1Backfillsalescticategory"
          ]
        },
        "RestApiId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayRestApi"
          ]
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "BackfillDashsalesDashctiDashcategoryLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "APINestedStack"
      ]
    },
    "ApiGatewayMethodV1BackfillsalesctiprojectGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayResourceV1Backfillsalesctiproject"
          ]
        },
        "RestApiId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayRestApi"
          ]
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "BackfillDashsalesDashctiDashprojectLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "APINestedStack"
      ]
    },
    "ApiGatewayMethodV1BackfillsalesctispaceGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayResourceV1Backfillsalesctispace"
          ]
        },
        "RestApiId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayRestApi"
          ]
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "BackfillDashsalesDashctiDashspaceLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "APINestedStack"
      ]
    },
    "ApiGatewayMethodV1BackfillsalesctistoreGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayResourceV1Backfillsalesctistore"
          ]
        },
        "RestApiId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayRestApi"
          ]
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "BackfillDashsalesDashctiDashstoreLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "APINestedStack"
      ]
    },
    "ApiGatewayMethodV1BackfillsalesctitenantGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayResourceV1Backfillsalesctitenant"
          ]
        },
        "RestApiId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayRestApi"
          ]
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "BackfillDashsalesDashctiDashtenantLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "APINestedStack"
      ]
    },
    "ApiGatewayMethodV1BackfillsalesctiunitGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayResourceV1Backfillsalesctiunit"
          ]
        },
        "RestApiId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayRestApi"
          ]
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "BackfillDashsalesDashctiDashunitLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "APINestedStack"
      ]
    },
    "ApiGatewayMethodV1BackfillsalesrciscategoryGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayResourceV1Backfillsalesrciscategory"
          ]
        },
        "RestApiId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayRestApi"
          ]
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "BackfillDashsalesDashrcisDashcategoryLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "APINestedStack"
      ]
    },
    "ApiGatewayMethodV1MerakiDevicesGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayResourceV1MerakiDevices"
          ]
        },
        "RestApiId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayRestApi"
          ]
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "MerakiDashdevicesLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "APINestedStack"
      ]
    },
    "ApiGatewayMethodV1MerakiDevicesstatusGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayResourceV1MerakiDevicesstatus"
          ]
        },
        "RestApiId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayRestApi"
          ]
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "MerakiDashdevicesDashstatusLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "APINestedStack"
      ]
    },
    "ApiGatewayDeployment1565187848939": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Fn::GetAtt": [
            "APINestedStack",
            "Outputs.ApiGatewayRestApi"
          ]
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodV1AislelabsDailytrafficGet",
        "ApiGatewayMethodV1AislelabsMonthlytrafficGet",
        "ApiGatewayMethodV1AislelabsDailydwellGet",
        "ApiGatewayMethodV1AislelabsFrequencyGet",
        "ApiGatewayMethodV1AislelabsVisitorflowGet",
        "ApiGatewayMethodV1AislelabsCrossvisitorGet",
        "ApiGatewayMethodV1AislelabsSocialwifiGet",
        "ApiGatewayMethodV1GiftcardGiftcardtransactionGet",
        "ApiGatewayMethodV1GiftcardGiftcardinfoGet",
        "ApiGatewayMethodV1SchedulesalescticategoryGet",
        "ApiGatewayMethodV1SchedulesalesctiprojectGet",
        "ApiGatewayMethodV1SchedulesalesctispaceGet",
        "ApiGatewayMethodV1SchedulesalesctistoreGet",
        "ApiGatewayMethodV1SchedulesalesctitenantGet",
        "ApiGatewayMethodV1SchedulesalesctiunitGet",
        "ApiGatewayMethodV1SchedulesalesrciscategoryGet",
        "ApiGatewayMethodV1BackfillsalescticategoryGet",
        "ApiGatewayMethodV1BackfillsalesctiprojectGet",
        "ApiGatewayMethodV1BackfillsalesctispaceGet",
        "ApiGatewayMethodV1BackfillsalesctistoreGet",
        "ApiGatewayMethodV1BackfillsalesctitenantGet",
        "ApiGatewayMethodV1BackfillsalesctiunitGet",
        "ApiGatewayMethodV1BackfillsalesrciscategoryGet",
        "ApiGatewayMethodV1MerakiDevicesGet",
        "ApiGatewayMethodV1MerakiDevicesstatusGet",
        "APINestedStack"
      ]
    },
    "AwsAlertsAlarm": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "cf-domo-loader-alerts-alarm",
        "Subscription": [
          {
            "Protocol": "email",
            "Endpoint": "alessandro.lenares@cadillacfairview.com"
          }
        ]
      },
      "DependsOn": []
    },
    "ExtractKinesis": {
      "Type": "AWS::Kinesis::Stream",
      "Properties": {
        "Name": "CF_ExtractKinesis",
        "ShardCount": 2
      },
      "DependsOn": []
    },
    "ExtractKinesisMap": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": [
        "ExtractLambdaFunction"
      ],
      "Properties": {
        "BatchSize": 1,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "ExtractKinesis",
            "Arn"
          ]
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "ExtractLambdaFunction",
            "Arn"
          ]
        },
        "StartingPosition": "TRIM_HORIZON"
      }
    },
    "DomoLoaderKinesis": {
      "Type": "AWS::Kinesis::Stream",
      "Properties": {
        "Name": "CF_DomoLoaderKinesis",
        "ShardCount": 2
      },
      "DependsOn": []
    },
    "LoaderKinesisMap": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": [
        "LoadLambdaFunction"
      ],
      "Properties": {
        "BatchSize": 10000,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "DomoLoaderKinesis",
            "Arn"
          ]
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "LoadLambdaFunction",
            "Arn"
          ]
        },
        "StartingPosition": "TRIM_HORIZON"
      }
    },
    "AlarmsNestedStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "AlDashdailyDashtrafficLambdaFunctionParameter": {
            "Ref": "AlDashdailyDashtrafficLambdaFunction"
          },
          "AwsAlertsAlarmParameter": {
            "Ref": "AwsAlertsAlarm"
          },
          "AlDashdailyDashtrafficUnderscorerefreshUnderscore8LambdaFunctionParameter": {
            "Ref": "AlDashdailyDashtrafficUnderscorerefreshUnderscore8LambdaFunction"
          },
          "AlDashdailyDashtrafficUnderscorerefreshUnderscore15LambdaFunctionParameter": {
            "Ref": "AlDashdailyDashtrafficUnderscorerefreshUnderscore15LambdaFunction"
          },
          "AlDashdailyDashtrafficUnderscorerefreshUnderscore22LambdaFunctionParameter": {
            "Ref": "AlDashdailyDashtrafficUnderscorerefreshUnderscore22LambdaFunction"
          },
          "AlDashdailyDashtrafficUnderscorerefreshUnderscore29LambdaFunctionParameter": {
            "Ref": "AlDashdailyDashtrafficUnderscorerefreshUnderscore29LambdaFunction"
          },
          "AlDashmonthlyDashtrafficLambdaFunctionParameter": {
            "Ref": "AlDashmonthlyDashtrafficLambdaFunction"
          },
          "AlDashdailyDashdwellLambdaFunctionParameter": {
            "Ref": "AlDashdailyDashdwellLambdaFunction"
          },
          "AlDashdailyDashdwellUnderscorerefreshUnderscore8LambdaFunctionParameter": {
            "Ref": "AlDashdailyDashdwellUnderscorerefreshUnderscore8LambdaFunction"
          },
          "AlDashdailyDashdwellUnderscorerefreshUnderscore15LambdaFunctionParameter": {
            "Ref": "AlDashdailyDashdwellUnderscorerefreshUnderscore15LambdaFunction"
          },
          "AlDashdailyDashdwellUnderscorerefreshUnderscore22LambdaFunctionParameter": {
            "Ref": "AlDashdailyDashdwellUnderscorerefreshUnderscore22LambdaFunction"
          },
          "AlDashdailyDashdwellUnderscorerefreshUnderscore29LambdaFunctionParameter": {
            "Ref": "AlDashdailyDashdwellUnderscorerefreshUnderscore29LambdaFunction"
          },
          "AlDashfrequencyLambdaFunctionParameter": {
            "Ref": "AlDashfrequencyLambdaFunction"
          },
          "AlDashvisitorDashflowLambdaFunctionParameter": {
            "Ref": "AlDashvisitorDashflowLambdaFunction"
          },
          "AlDashcrossvisitorLambdaFunctionParameter": {
            "Ref": "AlDashcrossvisitorLambdaFunction"
          },
          "MerakiDashdevicesLambdaFunctionParameter": {
            "Ref": "MerakiDashdevicesLambdaFunction"
          },
          "MerakiDashdevicesDashstatusLambdaFunctionParameter": {
            "Ref": "MerakiDashdevicesDashstatusLambdaFunction"
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "/",
            [
              "https://s3.amazonaws.com",
              {
                "Ref": "ServerlessDeploymentBucket"
              },
              "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z",
              "cloudformation-template-Alarms-nested-stack.json"
            ]
          ]
        }
      },
      "DependsOn": [
        "AlDashdailyDashtrafficLambdaFunction",
        "AwsAlertsAlarm",
        "AlDashdailyDashtrafficUnderscorerefreshUnderscore8LambdaFunction",
        "AlDashdailyDashtrafficUnderscorerefreshUnderscore15LambdaFunction",
        "AlDashdailyDashtrafficUnderscorerefreshUnderscore22LambdaFunction",
        "AlDashdailyDashtrafficUnderscorerefreshUnderscore29LambdaFunction",
        "AlDashmonthlyDashtrafficLambdaFunction",
        "AlDashdailyDashdwellLambdaFunction",
        "AlDashdailyDashdwellUnderscorerefreshUnderscore8LambdaFunction",
        "AlDashdailyDashdwellUnderscorerefreshUnderscore15LambdaFunction",
        "AlDashdailyDashdwellUnderscorerefreshUnderscore22LambdaFunction",
        "AlDashdailyDashdwellUnderscorerefreshUnderscore29LambdaFunction",
        "AlDashfrequencyLambdaFunction",
        "AlDashvisitorDashflowLambdaFunction",
        "AlDashcrossvisitorLambdaFunction",
        "MerakiDashdevicesLambdaFunction",
        "MerakiDashdevicesDashstatusLambdaFunction"
      ]
    },
    "APINestedStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {},
        "TemplateURL": {
          "Fn::Join": [
            "/",
            [
              "https://s3.amazonaws.com",
              {
                "Ref": "ServerlessDeploymentBucket"
              },
              "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z",
              "cloudformation-template-API-nested-stack.json"
            ]
          ]
        }
      }
    },
    "PermissionsNestedStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "AlDashdailyDashtrafficEventsRuleSchedule1ArnParameter": {
            "Fn::GetAtt": [
              "AlDashdailyDashtrafficEventsRuleSchedule1",
              "Arn"
            ]
          },
          "AlDashdailyDashtrafficLambdaFunctionArnParameter": {
            "Fn::GetAtt": [
              "AlDashdailyDashtrafficLambdaFunction",
              "Arn"
            ]
          },
          "AlDashdailyDashtrafficUnderscorerefreshUnderscore8EventsRuleSchedule1ArnParameter": {
            "Fn::GetAtt": [
              "AlDashdailyDashtrafficUnderscorerefreshUnderscore8EventsRuleSchedule1",
              "Arn"
            ]
          },
          "AlDashdailyDashtrafficUnderscorerefreshUnderscore8LambdaFunctionArnParameter": {
            "Fn::GetAtt": [
              "AlDashdailyDashtrafficUnderscorerefreshUnderscore8LambdaFunction",
              "Arn"
            ]
          },
          "AlDashdailyDashtrafficUnderscorerefreshUnderscore15EventsRuleSchedule1ArnParameter": {
            "Fn::GetAtt": [
              "AlDashdailyDashtrafficUnderscorerefreshUnderscore15EventsRuleSchedule1",
              "Arn"
            ]
          },
          "AlDashdailyDashtrafficUnderscorerefreshUnderscore15LambdaFunctionArnParameter": {
            "Fn::GetAtt": [
              "AlDashdailyDashtrafficUnderscorerefreshUnderscore15LambdaFunction",
              "Arn"
            ]
          },
          "AlDashdailyDashtrafficUnderscorerefreshUnderscore22EventsRuleSchedule1ArnParameter": {
            "Fn::GetAtt": [
              "AlDashdailyDashtrafficUnderscorerefreshUnderscore22EventsRuleSchedule1",
              "Arn"
            ]
          },
          "AlDashdailyDashtrafficUnderscorerefreshUnderscore22LambdaFunctionArnParameter": {
            "Fn::GetAtt": [
              "AlDashdailyDashtrafficUnderscorerefreshUnderscore22LambdaFunction",
              "Arn"
            ]
          },
          "AlDashdailyDashtrafficUnderscorerefreshUnderscore29EventsRuleSchedule1ArnParameter": {
            "Fn::GetAtt": [
              "AlDashdailyDashtrafficUnderscorerefreshUnderscore29EventsRuleSchedule1",
              "Arn"
            ]
          },
          "AlDashdailyDashtrafficUnderscorerefreshUnderscore29LambdaFunctionArnParameter": {
            "Fn::GetAtt": [
              "AlDashdailyDashtrafficUnderscorerefreshUnderscore29LambdaFunction",
              "Arn"
            ]
          },
          "AlDashmonthlyDashtrafficEventsRuleSchedule1ArnParameter": {
            "Fn::GetAtt": [
              "AlDashmonthlyDashtrafficEventsRuleSchedule1",
              "Arn"
            ]
          },
          "AlDashmonthlyDashtrafficLambdaFunctionArnParameter": {
            "Fn::GetAtt": [
              "AlDashmonthlyDashtrafficLambdaFunction",
              "Arn"
            ]
          },
          "AlDashdailyDashdwellEventsRuleSchedule1ArnParameter": {
            "Fn::GetAtt": [
              "AlDashdailyDashdwellEventsRuleSchedule1",
              "Arn"
            ]
          },
          "AlDashdailyDashdwellLambdaFunctionArnParameter": {
            "Fn::GetAtt": [
              "AlDashdailyDashdwellLambdaFunction",
              "Arn"
            ]
          },
          "AlDashdailyDashdwellUnderscorerefreshUnderscore8EventsRuleSchedule1ArnParameter": {
            "Fn::GetAtt": [
              "AlDashdailyDashdwellUnderscorerefreshUnderscore8EventsRuleSchedule1",
              "Arn"
            ]
          },
          "AlDashdailyDashdwellUnderscorerefreshUnderscore8LambdaFunctionArnParameter": {
            "Fn::GetAtt": [
              "AlDashdailyDashdwellUnderscorerefreshUnderscore8LambdaFunction",
              "Arn"
            ]
          },
          "AlDashdailyDashdwellUnderscorerefreshUnderscore15EventsRuleSchedule1ArnParameter": {
            "Fn::GetAtt": [
              "AlDashdailyDashdwellUnderscorerefreshUnderscore15EventsRuleSchedule1",
              "Arn"
            ]
          },
          "AlDashdailyDashdwellUnderscorerefreshUnderscore15LambdaFunctionArnParameter": {
            "Fn::GetAtt": [
              "AlDashdailyDashdwellUnderscorerefreshUnderscore15LambdaFunction",
              "Arn"
            ]
          },
          "AlDashdailyDashdwellUnderscorerefreshUnderscore22EventsRuleSchedule1ArnParameter": {
            "Fn::GetAtt": [
              "AlDashdailyDashdwellUnderscorerefreshUnderscore22EventsRuleSchedule1",
              "Arn"
            ]
          },
          "AlDashdailyDashdwellUnderscorerefreshUnderscore22LambdaFunctionArnParameter": {
            "Fn::GetAtt": [
              "AlDashdailyDashdwellUnderscorerefreshUnderscore22LambdaFunction",
              "Arn"
            ]
          },
          "AlDashdailyDashdwellUnderscorerefreshUnderscore29EventsRuleSchedule1ArnParameter": {
            "Fn::GetAtt": [
              "AlDashdailyDashdwellUnderscorerefreshUnderscore29EventsRuleSchedule1",
              "Arn"
            ]
          },
          "AlDashdailyDashdwellUnderscorerefreshUnderscore29LambdaFunctionArnParameter": {
            "Fn::GetAtt": [
              "AlDashdailyDashdwellUnderscorerefreshUnderscore29LambdaFunction",
              "Arn"
            ]
          },
          "AlDashvisitorDashflowEventsRuleSchedule1ArnParameter": {
            "Fn::GetAtt": [
              "AlDashvisitorDashflowEventsRuleSchedule1",
              "Arn"
            ]
          },
          "AlDashvisitorDashflowLambdaFunctionArnParameter": {
            "Fn::GetAtt": [
              "AlDashvisitorDashflowLambdaFunction",
              "Arn"
            ]
          },
          "AlDashcrossvisitorEventsRuleSchedule1ArnParameter": {
            "Fn::GetAtt": [
              "AlDashcrossvisitorEventsRuleSchedule1",
              "Arn"
            ]
          },
          "AlDashcrossvisitorLambdaFunctionArnParameter": {
            "Fn::GetAtt": [
              "AlDashcrossvisitorLambdaFunction",
              "Arn"
            ]
          },
          "AlDashsocialwifiEventsRuleSchedule1ArnParameter": {
            "Fn::GetAtt": [
              "AlDashsocialwifiEventsRuleSchedule1",
              "Arn"
            ]
          },
          "AlDashsocialwifiLambdaFunctionArnParameter": {
            "Fn::GetAtt": [
              "AlDashsocialwifiLambdaFunction",
              "Arn"
            ]
          },
          "GfDashgiftcardDashtransactionEventsRuleSchedule1ArnParameter": {
            "Fn::GetAtt": [
              "GfDashgiftcardDashtransactionEventsRuleSchedule1",
              "Arn"
            ]
          },
          "GfDashgiftcardDashtransactionLambdaFunctionArnParameter": {
            "Fn::GetAtt": [
              "GfDashgiftcardDashtransactionLambdaFunction",
              "Arn"
            ]
          },
          "GfDashgiftcardDashinfoEventsRuleSchedule1ArnParameter": {
            "Fn::GetAtt": [
              "GfDashgiftcardDashinfoEventsRuleSchedule1",
              "Arn"
            ]
          },
          "GfDashgiftcardDashinfoLambdaFunctionArnParameter": {
            "Fn::GetAtt": [
              "GfDashgiftcardDashinfoLambdaFunction",
              "Arn"
            ]
          },
          "ApiGatewayRestApiParameter": {
            "Fn::GetAtt": [
              "APINestedStack",
              "Outputs.ApiGatewayRestApi"
            ]
          },
          "AlDashfrequencyLambdaFunctionArnParameter": {
            "Fn::GetAtt": [
              "AlDashfrequencyLambdaFunction",
              "Arn"
            ]
          },
          "ScheduleDashsalesDashctiDashcategoryLambdaFunctionArnParameter": {
            "Fn::GetAtt": [
              "ScheduleDashsalesDashctiDashcategoryLambdaFunction",
              "Arn"
            ]
          },
          "ScheduleDashsalesDashctiDashprojectLambdaFunctionArnParameter": {
            "Fn::GetAtt": [
              "ScheduleDashsalesDashctiDashprojectLambdaFunction",
              "Arn"
            ]
          },
          "ScheduleDashsalesDashctiDashspaceLambdaFunctionArnParameter": {
            "Fn::GetAtt": [
              "ScheduleDashsalesDashctiDashspaceLambdaFunction",
              "Arn"
            ]
          },
          "ScheduleDashsalesDashctiDashstoreLambdaFunctionArnParameter": {
            "Fn::GetAtt": [
              "ScheduleDashsalesDashctiDashstoreLambdaFunction",
              "Arn"
            ]
          },
          "ScheduleDashsalesDashctiDashtenantLambdaFunctionArnParameter": {
            "Fn::GetAtt": [
              "ScheduleDashsalesDashctiDashtenantLambdaFunction",
              "Arn"
            ]
          },
          "ScheduleDashsalesDashctiDashunitLambdaFunctionArnParameter": {
            "Fn::GetAtt": [
              "ScheduleDashsalesDashctiDashunitLambdaFunction",
              "Arn"
            ]
          },
          "ScheduleDashsalesDashrcisDashcategoryLambdaFunctionArnParameter": {
            "Fn::GetAtt": [
              "ScheduleDashsalesDashrcisDashcategoryLambdaFunction",
              "Arn"
            ]
          },
          "BackfillDashsalesDashctiDashcategoryLambdaFunctionArnParameter": {
            "Fn::GetAtt": [
              "BackfillDashsalesDashctiDashcategoryLambdaFunction",
              "Arn"
            ]
          },
          "BackfillDashsalesDashctiDashprojectLambdaFunctionArnParameter": {
            "Fn::GetAtt": [
              "BackfillDashsalesDashctiDashprojectLambdaFunction",
              "Arn"
            ]
          },
          "BackfillDashsalesDashctiDashspaceLambdaFunctionArnParameter": {
            "Fn::GetAtt": [
              "BackfillDashsalesDashctiDashspaceLambdaFunction",
              "Arn"
            ]
          },
          "BackfillDashsalesDashctiDashstoreLambdaFunctionArnParameter": {
            "Fn::GetAtt": [
              "BackfillDashsalesDashctiDashstoreLambdaFunction",
              "Arn"
            ]
          },
          "BackfillDashsalesDashctiDashtenantLambdaFunctionArnParameter": {
            "Fn::GetAtt": [
              "BackfillDashsalesDashctiDashtenantLambdaFunction",
              "Arn"
            ]
          },
          "BackfillDashsalesDashctiDashunitLambdaFunctionArnParameter": {
            "Fn::GetAtt": [
              "BackfillDashsalesDashctiDashunitLambdaFunction",
              "Arn"
            ]
          },
          "BackfillDashsalesDashrcisDashcategoryLambdaFunctionArnParameter": {
            "Fn::GetAtt": [
              "BackfillDashsalesDashrcisDashcategoryLambdaFunction",
              "Arn"
            ]
          },
          "MerakiDashdevicesLambdaFunctionArnParameter": {
            "Fn::GetAtt": [
              "MerakiDashdevicesLambdaFunction",
              "Arn"
            ]
          },
          "MerakiDashdevicesDashstatusLambdaFunctionArnParameter": {
            "Fn::GetAtt": [
              "MerakiDashdevicesDashstatusLambdaFunction",
              "Arn"
            ]
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "/",
            [
              "https://s3.amazonaws.com",
              {
                "Ref": "ServerlessDeploymentBucket"
              },
              "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z",
              "cloudformation-template-Permissions-nested-stack.json"
            ]
          ]
        }
      },
      "DependsOn": [
        "AlDashdailyDashtrafficEventsRuleSchedule1",
        "AlDashdailyDashtrafficLambdaFunction",
        "AlDashdailyDashtrafficUnderscorerefreshUnderscore8EventsRuleSchedule1",
        "AlDashdailyDashtrafficUnderscorerefreshUnderscore8LambdaFunction",
        "AlDashdailyDashtrafficUnderscorerefreshUnderscore15EventsRuleSchedule1",
        "AlDashdailyDashtrafficUnderscorerefreshUnderscore15LambdaFunction",
        "AlDashdailyDashtrafficUnderscorerefreshUnderscore22EventsRuleSchedule1",
        "AlDashdailyDashtrafficUnderscorerefreshUnderscore22LambdaFunction",
        "AlDashdailyDashtrafficUnderscorerefreshUnderscore29EventsRuleSchedule1",
        "AlDashdailyDashtrafficUnderscorerefreshUnderscore29LambdaFunction",
        "AlDashmonthlyDashtrafficEventsRuleSchedule1",
        "AlDashmonthlyDashtrafficLambdaFunction",
        "AlDashdailyDashdwellEventsRuleSchedule1",
        "AlDashdailyDashdwellLambdaFunction",
        "AlDashdailyDashdwellUnderscorerefreshUnderscore8EventsRuleSchedule1",
        "AlDashdailyDashdwellUnderscorerefreshUnderscore8LambdaFunction",
        "AlDashdailyDashdwellUnderscorerefreshUnderscore15EventsRuleSchedule1",
        "AlDashdailyDashdwellUnderscorerefreshUnderscore15LambdaFunction",
        "AlDashdailyDashdwellUnderscorerefreshUnderscore22EventsRuleSchedule1",
        "AlDashdailyDashdwellUnderscorerefreshUnderscore22LambdaFunction",
        "AlDashdailyDashdwellUnderscorerefreshUnderscore29EventsRuleSchedule1",
        "AlDashdailyDashdwellUnderscorerefreshUnderscore29LambdaFunction",
        "AlDashvisitorDashflowEventsRuleSchedule1",
        "AlDashvisitorDashflowLambdaFunction",
        "AlDashcrossvisitorEventsRuleSchedule1",
        "AlDashcrossvisitorLambdaFunction",
        "AlDashsocialwifiEventsRuleSchedule1",
        "AlDashsocialwifiLambdaFunction",
        "GfDashgiftcardDashtransactionEventsRuleSchedule1",
        "GfDashgiftcardDashtransactionLambdaFunction",
        "GfDashgiftcardDashinfoEventsRuleSchedule1",
        "GfDashgiftcardDashinfoLambdaFunction",
        "APINestedStack",
        "AlDashfrequencyLambdaFunction",
        "ScheduleDashsalesDashctiDashcategoryLambdaFunction",
        "ScheduleDashsalesDashctiDashprojectLambdaFunction",
        "ScheduleDashsalesDashctiDashspaceLambdaFunction",
        "ScheduleDashsalesDashctiDashstoreLambdaFunction",
        "ScheduleDashsalesDashctiDashtenantLambdaFunction",
        "ScheduleDashsalesDashctiDashunitLambdaFunction",
        "ScheduleDashsalesDashrcisDashcategoryLambdaFunction",
        "BackfillDashsalesDashctiDashcategoryLambdaFunction",
        "BackfillDashsalesDashctiDashprojectLambdaFunction",
        "BackfillDashsalesDashctiDashspaceLambdaFunction",
        "BackfillDashsalesDashctiDashstoreLambdaFunction",
        "BackfillDashsalesDashctiDashtenantLambdaFunction",
        "BackfillDashsalesDashctiDashunitLambdaFunction",
        "BackfillDashsalesDashrcisDashcategoryLambdaFunction",
        "MerakiDashdevicesLambdaFunction",
        "MerakiDashdevicesDashstatusLambdaFunction"
      ]
    },
    "VersionsNestedStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "TransformLambdaFunctionParameter": {
            "Ref": "TransformLambdaFunction"
          },
          "LoadLambdaFunctionParameter": {
            "Ref": "LoadLambdaFunction"
          },
          "ExtractLambdaFunctionParameter": {
            "Ref": "ExtractLambdaFunction"
          },
          "AlDashdailyDashtrafficLambdaFunctionParameter": {
            "Ref": "AlDashdailyDashtrafficLambdaFunction"
          },
          "AlDashdailyDashtrafficUnderscorerefreshUnderscore8LambdaFunctionParameter": {
            "Ref": "AlDashdailyDashtrafficUnderscorerefreshUnderscore8LambdaFunction"
          },
          "AlDashdailyDashtrafficUnderscorerefreshUnderscore15LambdaFunctionParameter": {
            "Ref": "AlDashdailyDashtrafficUnderscorerefreshUnderscore15LambdaFunction"
          },
          "AlDashdailyDashtrafficUnderscorerefreshUnderscore22LambdaFunctionParameter": {
            "Ref": "AlDashdailyDashtrafficUnderscorerefreshUnderscore22LambdaFunction"
          },
          "AlDashdailyDashtrafficUnderscorerefreshUnderscore29LambdaFunctionParameter": {
            "Ref": "AlDashdailyDashtrafficUnderscorerefreshUnderscore29LambdaFunction"
          },
          "AlDashmonthlyDashtrafficLambdaFunctionParameter": {
            "Ref": "AlDashmonthlyDashtrafficLambdaFunction"
          },
          "AlDashdailyDashdwellLambdaFunctionParameter": {
            "Ref": "AlDashdailyDashdwellLambdaFunction"
          },
          "AlDashdailyDashdwellUnderscorerefreshUnderscore8LambdaFunctionParameter": {
            "Ref": "AlDashdailyDashdwellUnderscorerefreshUnderscore8LambdaFunction"
          },
          "AlDashdailyDashdwellUnderscorerefreshUnderscore15LambdaFunctionParameter": {
            "Ref": "AlDashdailyDashdwellUnderscorerefreshUnderscore15LambdaFunction"
          },
          "AlDashdailyDashdwellUnderscorerefreshUnderscore22LambdaFunctionParameter": {
            "Ref": "AlDashdailyDashdwellUnderscorerefreshUnderscore22LambdaFunction"
          },
          "AlDashdailyDashdwellUnderscorerefreshUnderscore29LambdaFunctionParameter": {
            "Ref": "AlDashdailyDashdwellUnderscorerefreshUnderscore29LambdaFunction"
          },
          "AlDashfrequencyLambdaFunctionParameter": {
            "Ref": "AlDashfrequencyLambdaFunction"
          },
          "AlDashvisitorDashflowLambdaFunctionParameter": {
            "Ref": "AlDashvisitorDashflowLambdaFunction"
          },
          "AlDashcrossvisitorLambdaFunctionParameter": {
            "Ref": "AlDashcrossvisitorLambdaFunction"
          },
          "AlDashsocialwifiLambdaFunctionParameter": {
            "Ref": "AlDashsocialwifiLambdaFunction"
          },
          "GfDashgiftcardDashtransactionLambdaFunctionParameter": {
            "Ref": "GfDashgiftcardDashtransactionLambdaFunction"
          },
          "GfDashgiftcardDashinfoLambdaFunctionParameter": {
            "Ref": "GfDashgiftcardDashinfoLambdaFunction"
          },
          "ScheduleDashsalesDashctiDashcategoryLambdaFunctionParameter": {
            "Ref": "ScheduleDashsalesDashctiDashcategoryLambdaFunction"
          },
          "ScheduleDashsalesDashctiDashprojectLambdaFunctionParameter": {
            "Ref": "ScheduleDashsalesDashctiDashprojectLambdaFunction"
          },
          "ScheduleDashsalesDashctiDashspaceLambdaFunctionParameter": {
            "Ref": "ScheduleDashsalesDashctiDashspaceLambdaFunction"
          },
          "ScheduleDashsalesDashctiDashstoreLambdaFunctionParameter": {
            "Ref": "ScheduleDashsalesDashctiDashstoreLambdaFunction"
          },
          "ScheduleDashsalesDashctiDashtenantLambdaFunctionParameter": {
            "Ref": "ScheduleDashsalesDashctiDashtenantLambdaFunction"
          },
          "ScheduleDashsalesDashctiDashunitLambdaFunctionParameter": {
            "Ref": "ScheduleDashsalesDashctiDashunitLambdaFunction"
          },
          "ScheduleDashsalesDashrcisDashcategoryLambdaFunctionParameter": {
            "Ref": "ScheduleDashsalesDashrcisDashcategoryLambdaFunction"
          },
          "BackfillDashsalesDashctiDashcategoryLambdaFunctionParameter": {
            "Ref": "BackfillDashsalesDashctiDashcategoryLambdaFunction"
          },
          "BackfillDashsalesDashctiDashprojectLambdaFunctionParameter": {
            "Ref": "BackfillDashsalesDashctiDashprojectLambdaFunction"
          },
          "BackfillDashsalesDashctiDashspaceLambdaFunctionParameter": {
            "Ref": "BackfillDashsalesDashctiDashspaceLambdaFunction"
          },
          "BackfillDashsalesDashctiDashstoreLambdaFunctionParameter": {
            "Ref": "BackfillDashsalesDashctiDashstoreLambdaFunction"
          },
          "BackfillDashsalesDashctiDashtenantLambdaFunctionParameter": {
            "Ref": "BackfillDashsalesDashctiDashtenantLambdaFunction"
          },
          "BackfillDashsalesDashctiDashunitLambdaFunctionParameter": {
            "Ref": "BackfillDashsalesDashctiDashunitLambdaFunction"
          },
          "BackfillDashsalesDashrcisDashcategoryLambdaFunctionParameter": {
            "Ref": "BackfillDashsalesDashrcisDashcategoryLambdaFunction"
          },
          "MerakiDashdevicesLambdaFunctionParameter": {
            "Ref": "MerakiDashdevicesLambdaFunction"
          },
          "MerakiDashdevicesDashstatusLambdaFunctionParameter": {
            "Ref": "MerakiDashdevicesDashstatusLambdaFunction"
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "/",
            [
              "https://s3.amazonaws.com",
              {
                "Ref": "ServerlessDeploymentBucket"
              },
              "serverless/cf-domo-loader/dev/1565187872015-2019-08-07T14:24:32.015Z",
              "cloudformation-template-Versions-nested-stack.json"
            ]
          ]
        }
      },
      "DependsOn": [
        "TransformLambdaFunction",
        "LoadLambdaFunction",
        "ExtractLambdaFunction",
        "AlDashdailyDashtrafficLambdaFunction",
        "AlDashdailyDashtrafficUnderscorerefreshUnderscore8LambdaFunction",
        "AlDashdailyDashtrafficUnderscorerefreshUnderscore15LambdaFunction",
        "AlDashdailyDashtrafficUnderscorerefreshUnderscore22LambdaFunction",
        "AlDashdailyDashtrafficUnderscorerefreshUnderscore29LambdaFunction",
        "AlDashmonthlyDashtrafficLambdaFunction",
        "AlDashdailyDashdwellLambdaFunction",
        "AlDashdailyDashdwellUnderscorerefreshUnderscore8LambdaFunction",
        "AlDashdailyDashdwellUnderscorerefreshUnderscore15LambdaFunction",
        "AlDashdailyDashdwellUnderscorerefreshUnderscore22LambdaFunction",
        "AlDashdailyDashdwellUnderscorerefreshUnderscore29LambdaFunction",
        "AlDashfrequencyLambdaFunction",
        "AlDashvisitorDashflowLambdaFunction",
        "AlDashcrossvisitorLambdaFunction",
        "AlDashsocialwifiLambdaFunction",
        "GfDashgiftcardDashtransactionLambdaFunction",
        "GfDashgiftcardDashinfoLambdaFunction",
        "ScheduleDashsalesDashctiDashcategoryLambdaFunction",
        "ScheduleDashsalesDashctiDashprojectLambdaFunction",
        "ScheduleDashsalesDashctiDashspaceLambdaFunction",
        "ScheduleDashsalesDashctiDashstoreLambdaFunction",
        "ScheduleDashsalesDashctiDashtenantLambdaFunction",
        "ScheduleDashsalesDashctiDashunitLambdaFunction",
        "ScheduleDashsalesDashrcisDashcategoryLambdaFunction",
        "BackfillDashsalesDashctiDashcategoryLambdaFunction",
        "BackfillDashsalesDashctiDashprojectLambdaFunction",
        "BackfillDashsalesDashctiDashspaceLambdaFunction",
        "BackfillDashsalesDashctiDashstoreLambdaFunction",
        "BackfillDashsalesDashctiDashtenantLambdaFunction",
        "BackfillDashsalesDashctiDashunitLambdaFunction",
        "BackfillDashsalesDashrcisDashcategoryLambdaFunction",
        "MerakiDashdevicesLambdaFunction",
        "MerakiDashdevicesDashstatusLambdaFunction"
      ]
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "TransformLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.TransformLambdaVersionBFdPZLR9G38pZpZtcfizkztbmN1VhvFkQCRSmLWDKw"
        ]
      }
    },
    "LoadLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.LoadLambdaVersionvP9edj3ILJgti7k89GeagoCBAabq0j1i7noElVRtQZ0"
        ]
      }
    },
    "ExtractLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.ExtractLambdaVersionymUCCGGwTfqfZ4N44Due6e65mIKlvmjIzLrOEr1g"
        ]
      }
    },
    "AlDashdailyDashtrafficLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.AlDashdailyDashtrafficLambdaVersionKzzzhRpntE4dmkqCwT6plFDC3BTLcXwrEOBgvpIRIPU"
        ]
      }
    },
    "AlDashdailyDashtrafficUnderscorerefreshUnderscore8LambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.AlDashdailyDashtrafficUnderscorerefreshUnderscore8LambdaVersion9cs06voJe7r0UDm9PrTR5Q4HLEhRauZdP16X0zGKU"
        ]
      }
    },
    "AlDashdailyDashtrafficUnderscorerefreshUnderscore15LambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.AlDashdailyDashtrafficUnderscorerefreshUnderscore15LambdaVersiondt4O2uRmb5i5dXgaWrcxgRCZ8YtPbA8bdZ1s9MVz7g"
        ]
      }
    },
    "AlDashdailyDashtrafficUnderscorerefreshUnderscore22LambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.AlDashdailyDashtrafficUnderscorerefreshUnderscore22LambdaVersionGHcCLGewvkaqVRWuPD71bspCSXkH8Fag019cHbtysto"
        ]
      }
    },
    "AlDashdailyDashtrafficUnderscorerefreshUnderscore29LambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.AlDashdailyDashtrafficUnderscorerefreshUnderscore29LambdaVersionnjCzvoIRSgX9xuGP1QddxGXi8XmmxeFmCG9ZjL8xy3w"
        ]
      }
    },
    "AlDashmonthlyDashtrafficLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.AlDashmonthlyDashtrafficLambdaVersionnCfFJl08LAltGbHiYT5Rx6tiFS4zWiaTnsKpcuwvqY"
        ]
      }
    },
    "AlDashdailyDashdwellLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.AlDashdailyDashdwellLambdaVersionk6H8RqS5H240mMpJ51FCpFsbNd3X3CO6pGCxhuzfPj4"
        ]
      }
    },
    "AlDashdailyDashdwellUnderscorerefreshUnderscore8LambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.AlDashdailyDashdwellUnderscorerefreshUnderscore8LambdaVersionkRGUs2WjLFL0KWSCNvECP8zK6IDYTBJ0p3UwZHCgDDY"
        ]
      }
    },
    "AlDashdailyDashdwellUnderscorerefreshUnderscore15LambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.AlDashdailyDashdwellUnderscorerefreshUnderscore15LambdaVersionMGCGQLGjPPvqJoypBBf1t9j6aa1h2UdIklG9nylhw"
        ]
      }
    },
    "AlDashdailyDashdwellUnderscorerefreshUnderscore22LambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.AlDashdailyDashdwellUnderscorerefreshUnderscore22LambdaVersionitvFC1Pk3yZuhWw9U2WYeBzfv2f1q5cujehy62k"
        ]
      }
    },
    "AlDashdailyDashdwellUnderscorerefreshUnderscore29LambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.AlDashdailyDashdwellUnderscorerefreshUnderscore29LambdaVersionyVlbT9PVKl0DsKAgFft6pGSVqnGUT0u5Xc5CoROLgu4"
        ]
      }
    },
    "AlDashfrequencyLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.AlDashfrequencyLambdaVersionMxUJDWssTjBGs7m9F6x2A3swXSoDyQhoww118JpOQs"
        ]
      }
    },
    "AlDashvisitorDashflowLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.AlDashvisitorDashflowLambdaVersionibv2VI58bXjoVqJrrbcdB3cpQFqkSzmaFDcQwCQchk"
        ]
      }
    },
    "AlDashcrossvisitorLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.AlDashcrossvisitorLambdaVersion3gTOVpndAmGeDGlM80uQoRg7L8fNEqHfbrtgvnQoU"
        ]
      }
    },
    "AlDashsocialwifiLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.AlDashsocialwifiLambdaVersionm5OAWRfRRC0bcKJXLLMItaZhv5kfj3oLzmyhTiPS4ac"
        ]
      }
    },
    "GfDashgiftcardDashtransactionLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.GfDashgiftcardDashtransactionLambdaVersionsdNG8VpYyXrl3SHzRthR0wW479CNkbUYHyC1K8MNE"
        ]
      }
    },
    "GfDashgiftcardDashinfoLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.GfDashgiftcardDashinfoLambdaVersion1Te9f4f5ELA6x3ow9CLq7mWZV1ttjHl5rOcxIzkjM"
        ]
      }
    },
    "ScheduleDashsalesDashctiDashcategoryLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.ScheduleDashsalesDashctiDashcategoryLambdaVersionxPvmy9WZpUkkGMVfWdKGhRyWZmpno9YfZdgOI3K50bI"
        ]
      }
    },
    "ScheduleDashsalesDashctiDashprojectLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.ScheduleDashsalesDashctiDashprojectLambdaVersionPzJ3pXdUJWIM6jG0fuLZktug3g9kdtAP8cnhhNJt6E"
        ]
      }
    },
    "ScheduleDashsalesDashctiDashspaceLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.ScheduleDashsalesDashctiDashspaceLambdaVersionpzniyuLOagmqJ5luF1XbgVGxS69EmxoUs3NG55T9s"
        ]
      }
    },
    "ScheduleDashsalesDashctiDashstoreLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.ScheduleDashsalesDashctiDashstoreLambdaVersionD0URjBaoN4VvapOkq5CAT08Lgq08ekPrmoT52489AE"
        ]
      }
    },
    "ScheduleDashsalesDashctiDashtenantLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.ScheduleDashsalesDashctiDashtenantLambdaVersionYGbwZz1LON5BJS6O2oxYxWqzzJdwsQnTBqRID5FNQ"
        ]
      }
    },
    "ScheduleDashsalesDashctiDashunitLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.ScheduleDashsalesDashctiDashunitLambdaVersionDPI54T0LEn14HQncN2IJll9Sl6jbtcsjzEGsxTfts"
        ]
      }
    },
    "ScheduleDashsalesDashrcisDashcategoryLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.ScheduleDashsalesDashrcisDashcategoryLambdaVersionJpINn9Cor4Jk2CT4PRINj1rAxYxibKJyQ2pA8UbQ"
        ]
      }
    },
    "BackfillDashsalesDashctiDashcategoryLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.BackfillDashsalesDashctiDashcategoryLambdaVersion7dGegnP6OUBuWxKuUvdkpq9DYB3gv5wbc1baI6CKtxU"
        ]
      }
    },
    "BackfillDashsalesDashctiDashprojectLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.BackfillDashsalesDashctiDashprojectLambdaVersionqHh04KqJEJrbNnkfX9kPbtkPayc3sIsdfgR04M3qyw"
        ]
      }
    },
    "BackfillDashsalesDashctiDashspaceLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.BackfillDashsalesDashctiDashspaceLambdaVersionX4FOjaV1v4sgMJejXaTYvLbD2rP55UcK7pqjtvjc"
        ]
      }
    },
    "BackfillDashsalesDashctiDashstoreLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.BackfillDashsalesDashctiDashstoreLambdaVersionAW8gveum3Sq5KwO0T5nsH24zMjxrn2ycvBMZuTB40"
        ]
      }
    },
    "BackfillDashsalesDashctiDashtenantLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.BackfillDashsalesDashctiDashtenantLambdaVersioncrvxEDfZm9DdVSOI549Qk0oGJ0rYEqYIZ0IlXANhGdo"
        ]
      }
    },
    "BackfillDashsalesDashctiDashunitLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.BackfillDashsalesDashctiDashunitLambdaVersionlbGERySaRtaEeuOaoOmIrrZuxRHTC6C2fpYg9HG8"
        ]
      }
    },
    "BackfillDashsalesDashrcisDashcategoryLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.BackfillDashsalesDashrcisDashcategoryLambdaVersions4H1qJupcHYQ0dUOaLv0tqYV3MauSiDtp4nH3lA"
        ]
      }
    },
    "MerakiDashdevicesLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.MerakiDashdevicesLambdaVersioniQKK9fys7WnrjbKWwGP4aikDiVdEnmelOeYArCOJZtM"
        ]
      }
    },
    "MerakiDashdevicesDashstatusLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Fn::GetAtt": [
          "VersionsNestedStack",
          "Outputs.MerakiDashdevicesDashstatusLambdaVersionkLmuRuqAWQ1HiBJWULJ0tRDcCM9XSwBHLkakqwCboo"
        ]
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Fn::GetAtt": [
                "APINestedStack",
                "Outputs.ApiGatewayRestApi"
              ]
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      }
    }
  }
}