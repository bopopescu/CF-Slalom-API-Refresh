{
  "service": {
    "service": "cf-domo-loader",
    "serviceObject": {
      "name": "cf-domo-loader"
    },
    "provider": {
      "stage": "dev",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)*]+?)}",
      "name": "aws",
      "runtime": "nodejs10.x",
      "region": "us-west-2",
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "kinesis:*",
            "lambda:*",
            "s3:*"
          ],
          "Resource": "*"
        }
      ],
      "environment": {
        "stage": "dev",
        "log_level": "info",
        "bouncedstreamid": -1,
        "newstreamid": -2,
        "totalstreamid": -3,
        "hourlyFilteredPropertyStreamId": -8,
        "hourlyFilteredSpaceStreamId": -9,
        "hourlyRawPropertyStreamId": -10,
        "hourlyRawSpaceStreamId": -11,
        "dailyFilteredPropertyStreamId": -4,
        "dailyFilteredSpaceStreamId": -5,
        "dailyRawPropertyStreamId": -6,
        "dailyRawSpaceStreamId": -7,
        "dailyPropertyDwellStreamId": -30,
        "dailySpaceDwellStreamId": -80,
        "dailyFloorStreamId": -55,
        "monthlyPropertyDwellStreamId": -31,
        "monthlySpaceDwellStreamId": -81,
        "monthlyFilteredPropertyStreamId": -40,
        "monthlyFilteredSpaceStreamId": -41,
        "monthlyRawPropertyStreamId": -42,
        "monthlyRawSpaceStreamId": -43,
        "frequencyStreamId": -12,
        "crossvisitorStreamId": -13,
        "merakiDevicesStatusStreamId": -15,
        "merakiDevicesStreamId": -14,
        "socialwifiStreamId": -17,
        "giftCardTransactionStreamId": -18,
        "giftCardInfoStreamId": -19,
        "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
        "dbuser": "domo",
        "dbpassword": "CFdomo!loader*_*",
        "dbname": "domoloader"
      },
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            },
            "DependsOn": []
          },
          "TransformLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-transform"
            },
            "DependsOn": []
          },
          "LoadLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-load"
            },
            "DependsOn": []
          },
          "ExtractLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-extract"
            },
            "DependsOn": []
          },
          "AlDashdailyDashtrafficLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-daily-traffic"
            },
            "DependsOn": []
          },
          "AlDashdailyDashtrafficUnderscorerefreshUnderscore8LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-daily-traffic_refresh_8"
            },
            "DependsOn": []
          },
          "AlDashdailyDashtrafficUnderscorerefreshUnderscore15LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-daily-traffic_refresh_15"
            },
            "DependsOn": []
          },
          "AlDashdailyDashtrafficUnderscorerefreshUnderscore22LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-daily-traffic_refresh_22"
            },
            "DependsOn": []
          },
          "AlDashdailyDashtrafficUnderscorerefreshUnderscore29LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-daily-traffic_refresh_29"
            },
            "DependsOn": []
          },
          "AlDashmonthlyDashtrafficLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-monthly-traffic"
            },
            "DependsOn": []
          },
          "AlDashdailyDashdwellLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-daily-dwell"
            },
            "DependsOn": []
          },
          "AlDashdailyDashdwellUnderscorerefreshUnderscore8LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-daily-dwell_refresh_8"
            },
            "DependsOn": []
          },
          "AlDashdailyDashdwellUnderscorerefreshUnderscore15LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-daily-dwell_refresh_15"
            },
            "DependsOn": []
          },
          "AlDashdailyDashdwellUnderscorerefreshUnderscore22LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-daily-dwell_refresh_22"
            },
            "DependsOn": []
          },
          "AlDashdailyDashdwellUnderscorerefreshUnderscore29LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-daily-dwell_refresh_29"
            },
            "DependsOn": []
          },
          "AlDashvisitorDashflowLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-visitor-flow"
            },
            "DependsOn": []
          },
          "AlDashvisitorDashflowUnderscorerefreshUnderscore8LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-visitor-flow_refresh_8"
            },
            "DependsOn": []
          },
          "AlDashvisitorDashflowUnderscorerefreshUnderscore15LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-visitor-flow_refresh_15"
            },
            "DependsOn": []
          },
          "AlDashvisitorDashflowUnderscorerefreshUnderscore22LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-visitor-flow_refresh_22"
            },
            "DependsOn": []
          },
          "AlDashvisitorDashflowUnderscorerefreshUnderscore29LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-visitor-flow_refresh_29"
            },
            "DependsOn": []
          },
          "AlDashcrossvisitorLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-crossvisitor"
            },
            "DependsOn": []
          },
          "AlDashsocialwifiLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-socialwifi"
            },
            "DependsOn": []
          },
          "AlDashsocialwifiUnderscorerefreshUnderscore8LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-socialwifi_refresh_8"
            },
            "DependsOn": []
          },
          "AlDashsocialwifiUnderscorerefreshUnderscore15LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-socialwifi_refresh_15"
            },
            "DependsOn": []
          },
          "AlDashsocialwifiUnderscorerefreshUnderscore22LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-socialwifi_refresh_22"
            },
            "DependsOn": []
          },
          "AlDashsocialwifiUnderscorerefreshUnderscore29LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-al-socialwifi_refresh_29"
            },
            "DependsOn": []
          },
          "GfDashgiftcardDashtransactionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-gf-giftcard-transaction"
            },
            "DependsOn": []
          },
          "GfDashgiftcardDashinfoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-gf-giftcard-info"
            },
            "DependsOn": []
          },
          "ScheduleDashsalesDashctiDashunitLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-schedule-sales-cti-unit"
            },
            "DependsOn": []
          },
          "ScheduleDashsalesDashrcisDashcategoryLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-schedule-sales-rcis-category"
            },
            "DependsOn": []
          },
          "BackfillDashsalesDashctiDashcategoryLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-backfill-sales-cti-category"
            },
            "DependsOn": []
          },
          "BackfillDashsalesDashctiDashprojectLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-backfill-sales-cti-project"
            },
            "DependsOn": []
          },
          "BackfillDashsalesDashctiDashspaceLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-backfill-sales-cti-space"
            },
            "DependsOn": []
          },
          "BackfillDashsalesDashctiDashstoreLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-backfill-sales-cti-store"
            },
            "DependsOn": []
          },
          "BackfillDashsalesDashctiDashtenantLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-backfill-sales-cti-tenant"
            },
            "DependsOn": []
          },
          "BackfillDashsalesDashctiDashunitLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-backfill-sales-cti-unit"
            },
            "DependsOn": []
          },
          "BackfillDashsalesDashrcisDashcategoryLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-backfill-sales-rcis-category"
            },
            "DependsOn": []
          },
          "MerakiDashdevicesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-meraki-devices"
            },
            "DependsOn": []
          },
          "MerakiDashdevicesDashstatusLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cf-domo-loader-dev-meraki-devices-status"
            },
            "DependsOn": []
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "cf-domo-loader",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cf-domo-loader-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cf-domo-loader-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "cf-domo-loader",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            },
            "DependsOn": []
          },
          "TransformLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-transform",
              "Handler": "handlers/main.transform",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 300,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader",
                  "apikey": "efc5ffe26768428e101139aece9af70b"
                }
              }
            },
            "DependsOn": [
              "TransformLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "LoadLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-load",
              "Handler": "handlers/main.load",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 300,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader",
                  "apikey": "efc5ffe26768428e101139aece9af70b"
                }
              }
            },
            "DependsOn": [
              "LoadLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "ExtractLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-extract",
              "Handler": "handlers/main.extract",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 300,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader",
                  "merakikey": "7640451cf175e0081031c7b251c8ae125ae6668f",
                  "apikey": "efc5ffe26768428e101139aece9af70b",
                  "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8",
                  "maxretries": 5
                }
              }
            },
            "DependsOn": [
              "ExtractLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "AlDashdailyDashtrafficLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-al-daily-traffic",
              "Handler": "scheduling/aislelabs_dashboard.getDailyTraffic",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader",
                  "apikey": "efc5ffe26768428e101139aece9af70b",
                  "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
                }
              }
            },
            "DependsOn": [
              "AlDashdailyDashtrafficLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "AlDashdailyDashtrafficUnderscorerefreshUnderscore8LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-al-daily-traffic_refresh_8",
              "Handler": "scheduling/aislelabs_dashboard.getDailyTraffic_refresh_8",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader",
                  "apikey": "efc5ffe26768428e101139aece9af70b",
                  "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
                }
              }
            },
            "DependsOn": [
              "AlDashdailyDashtrafficUnderscorerefreshUnderscore8LogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "AlDashdailyDashtrafficUnderscorerefreshUnderscore15LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-al-daily-traffic_refresh_15",
              "Handler": "scheduling/aislelabs_dashboard.getDailyTraffic_refresh_15",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader",
                  "apikey": "efc5ffe26768428e101139aece9af70b",
                  "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
                }
              }
            },
            "DependsOn": [
              "AlDashdailyDashtrafficUnderscorerefreshUnderscore15LogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "AlDashdailyDashtrafficUnderscorerefreshUnderscore22LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-al-daily-traffic_refresh_22",
              "Handler": "scheduling/aislelabs_dashboard.getDailyTraffic_refresh_22",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader",
                  "apikey": "efc5ffe26768428e101139aece9af70b",
                  "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
                }
              }
            },
            "DependsOn": [
              "AlDashdailyDashtrafficUnderscorerefreshUnderscore22LogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "AlDashdailyDashtrafficUnderscorerefreshUnderscore29LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-al-daily-traffic_refresh_29",
              "Handler": "scheduling/aislelabs_dashboard.getDailyTraffic_refresh_29",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader",
                  "apikey": "efc5ffe26768428e101139aece9af70b",
                  "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
                }
              }
            },
            "DependsOn": [
              "AlDashdailyDashtrafficUnderscorerefreshUnderscore29LogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "AlDashmonthlyDashtrafficLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-al-monthly-traffic",
              "Handler": "scheduling/aislelabs_dashboard.getMonthlyTraffic",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader",
                  "apikey": "efc5ffe26768428e101139aece9af70b",
                  "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
                }
              }
            },
            "DependsOn": [
              "AlDashmonthlyDashtrafficLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "AlDashdailyDashdwellLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-al-daily-dwell",
              "Handler": "scheduling/aislelabs_dashboard.getDailyDwell",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader",
                  "apikey": "efc5ffe26768428e101139aece9af70b",
                  "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
                }
              }
            },
            "DependsOn": [
              "AlDashdailyDashdwellLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "AlDashdailyDashdwellUnderscorerefreshUnderscore8LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-al-daily-dwell_refresh_8",
              "Handler": "scheduling/aislelabs_dashboard.getDailyDwell_refresh_8",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader",
                  "apikey": "efc5ffe26768428e101139aece9af70b",
                  "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
                }
              }
            },
            "DependsOn": [
              "AlDashdailyDashdwellUnderscorerefreshUnderscore8LogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "AlDashdailyDashdwellUnderscorerefreshUnderscore15LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-al-daily-dwell_refresh_15",
              "Handler": "scheduling/aislelabs_dashboard.getDailyDwell_refresh_15",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader",
                  "apikey": "efc5ffe26768428e101139aece9af70b",
                  "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
                }
              }
            },
            "DependsOn": [
              "AlDashdailyDashdwellUnderscorerefreshUnderscore15LogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "AlDashdailyDashdwellUnderscorerefreshUnderscore22LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-al-daily-dwell_refresh_22",
              "Handler": "scheduling/aislelabs_dashboard.getDailyDwell_refresh_22",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader",
                  "apikey": "efc5ffe26768428e101139aece9af70b",
                  "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
                }
              }
            },
            "DependsOn": [
              "AlDashdailyDashdwellUnderscorerefreshUnderscore22LogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "AlDashdailyDashdwellUnderscorerefreshUnderscore29LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-al-daily-dwell_refresh_29",
              "Handler": "scheduling/aislelabs_dashboard.getDailyDwell_refresh_29",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader",
                  "apikey": "efc5ffe26768428e101139aece9af70b",
                  "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
                }
              }
            },
            "DependsOn": [
              "AlDashdailyDashdwellUnderscorerefreshUnderscore29LogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "AlDashvisitorDashflowLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-al-visitor-flow",
              "Handler": "scheduling/aislelabs_visitor_flow.get",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader",
                  "apikey": "efc5ffe26768428e101139aece9af70b",
                  "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
                }
              }
            },
            "DependsOn": [
              "AlDashvisitorDashflowLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "AlDashvisitorDashflowUnderscorerefreshUnderscore8LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-al-visitor-flow_refresh_8",
              "Handler": "scheduling/aislelabs_visitor_flow.get_refresh_8",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader",
                  "apikey": "efc5ffe26768428e101139aece9af70b",
                  "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
                }
              }
            },
            "DependsOn": [
              "AlDashvisitorDashflowUnderscorerefreshUnderscore8LogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "AlDashvisitorDashflowUnderscorerefreshUnderscore15LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-al-visitor-flow_refresh_15",
              "Handler": "scheduling/aislelabs_visitor_flow.get_refresh_15",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader",
                  "apikey": "efc5ffe26768428e101139aece9af70b",
                  "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
                }
              }
            },
            "DependsOn": [
              "AlDashvisitorDashflowUnderscorerefreshUnderscore15LogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "AlDashvisitorDashflowUnderscorerefreshUnderscore22LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-al-visitor-flow_refresh_22",
              "Handler": "scheduling/aislelabs_visitor_flow.get_refresh_22",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader",
                  "apikey": "efc5ffe26768428e101139aece9af70b",
                  "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
                }
              }
            },
            "DependsOn": [
              "AlDashvisitorDashflowUnderscorerefreshUnderscore22LogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "AlDashvisitorDashflowUnderscorerefreshUnderscore29LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-al-visitor-flow_refresh_29",
              "Handler": "scheduling/aislelabs_visitor_flow.get_refresh_29",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader",
                  "apikey": "efc5ffe26768428e101139aece9af70b",
                  "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
                }
              }
            },
            "DependsOn": [
              "AlDashvisitorDashflowUnderscorerefreshUnderscore29LogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "AlDashcrossvisitorLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-al-crossvisitor",
              "Handler": "scheduling/aislelabs_crossvisitor.get",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader",
                  "apikey": "efc5ffe26768428e101139aece9af70b",
                  "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
                }
              }
            },
            "DependsOn": [
              "AlDashcrossvisitorLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "AlDashsocialwifiLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-al-socialwifi",
              "Handler": "scheduling/aislelabs_socialwifi.get",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader",
                  "apikey": "efc5ffe26768428e101139aece9af70b",
                  "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
                }
              }
            },
            "DependsOn": [
              "AlDashsocialwifiLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "AlDashsocialwifiUnderscorerefreshUnderscore8LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-al-socialwifi_refresh_8",
              "Handler": "scheduling/aislelabs_socialwifi.get_refresh_8",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader",
                  "apikey": "efc5ffe26768428e101139aece9af70b",
                  "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
                }
              }
            },
            "DependsOn": [
              "AlDashsocialwifiUnderscorerefreshUnderscore8LogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "AlDashsocialwifiUnderscorerefreshUnderscore15LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-al-socialwifi_refresh_15",
              "Handler": "scheduling/aislelabs_socialwifi.get_refresh_15",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader",
                  "apikey": "efc5ffe26768428e101139aece9af70b",
                  "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
                }
              }
            },
            "DependsOn": [
              "AlDashsocialwifiUnderscorerefreshUnderscore15LogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "AlDashsocialwifiUnderscorerefreshUnderscore22LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-al-socialwifi_refresh_22",
              "Handler": "scheduling/aislelabs_socialwifi.get_refresh_22",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader",
                  "apikey": "efc5ffe26768428e101139aece9af70b",
                  "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
                }
              }
            },
            "DependsOn": [
              "AlDashsocialwifiUnderscorerefreshUnderscore22LogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "AlDashsocialwifiUnderscorerefreshUnderscore29LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-al-socialwifi_refresh_29",
              "Handler": "scheduling/aislelabs_socialwifi.get_refresh_29",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader",
                  "apikey": "efc5ffe26768428e101139aece9af70b",
                  "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
                }
              }
            },
            "DependsOn": [
              "AlDashsocialwifiUnderscorerefreshUnderscore29LogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "GfDashgiftcardDashtransactionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-gf-giftcard-transaction",
              "Handler": "scheduling/s3_gift_cards.getGiftCardTransaction",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader"
                }
              }
            },
            "DependsOn": [
              "GfDashgiftcardDashtransactionLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "GfDashgiftcardDashinfoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-gf-giftcard-info",
              "Handler": "scheduling/s3_gift_cards.getGiftCardInfo",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader"
                }
              }
            },
            "DependsOn": [
              "GfDashgiftcardDashinfoLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "ScheduleDashsalesDashctiDashunitLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-schedule-sales-cti-unit",
              "Handler": "scheduling/s3_sales.schedule_cti_unit",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader"
                }
              }
            },
            "DependsOn": [
              "ScheduleDashsalesDashctiDashunitLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "ScheduleDashsalesDashrcisDashcategoryLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-schedule-sales-rcis-category",
              "Handler": "scheduling/s3_sales.schedule_rcis_category",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader"
                }
              }
            },
            "DependsOn": [
              "ScheduleDashsalesDashrcisDashcategoryLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "BackfillDashsalesDashctiDashcategoryLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-backfill-sales-cti-category",
              "Handler": "scheduling/s3_sales.backfill_cti_category",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader"
                }
              }
            },
            "DependsOn": [
              "BackfillDashsalesDashctiDashcategoryLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "BackfillDashsalesDashctiDashprojectLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-backfill-sales-cti-project",
              "Handler": "scheduling/s3_sales.backfill_cti_project",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader"
                }
              }
            },
            "DependsOn": [
              "BackfillDashsalesDashctiDashprojectLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "BackfillDashsalesDashctiDashspaceLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-backfill-sales-cti-space",
              "Handler": "scheduling/s3_sales.backfill_cti_space",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader"
                }
              }
            },
            "DependsOn": [
              "BackfillDashsalesDashctiDashspaceLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "BackfillDashsalesDashctiDashstoreLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-backfill-sales-cti-store",
              "Handler": "scheduling/s3_sales.backfill_cti_store",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader"
                }
              }
            },
            "DependsOn": [
              "BackfillDashsalesDashctiDashstoreLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "BackfillDashsalesDashctiDashtenantLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-backfill-sales-cti-tenant",
              "Handler": "scheduling/s3_sales.backfill_cti_tenant",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader"
                }
              }
            },
            "DependsOn": [
              "BackfillDashsalesDashctiDashtenantLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "BackfillDashsalesDashctiDashunitLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-backfill-sales-cti-unit",
              "Handler": "scheduling/s3_sales.backfill_cti_unit",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader"
                }
              }
            },
            "DependsOn": [
              "BackfillDashsalesDashctiDashunitLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "BackfillDashsalesDashrcisDashcategoryLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-backfill-sales-rcis-category",
              "Handler": "scheduling/s3_sales.backfill_rcis_category",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader"
                }
              }
            },
            "DependsOn": [
              "BackfillDashsalesDashrcisDashcategoryLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "MerakiDashdevicesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-meraki-devices",
              "Handler": "scheduling/meraki.getDevices",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader",
                  "merakikey": "7640451cf175e0081031c7b251c8ae125ae6668f"
                }
              }
            },
            "DependsOn": [
              "MerakiDashdevicesLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "MerakiDashdevicesDashstatusLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z/cf-domo-loader.zip"
              },
              "FunctionName": "cf-domo-loader-dev-meraki-devices-status",
              "Handler": "scheduling/meraki.getDevicesStatus",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev",
                  "log_level": "info",
                  "bouncedstreamid": -1,
                  "newstreamid": -2,
                  "totalstreamid": -3,
                  "hourlyFilteredPropertyStreamId": -8,
                  "hourlyFilteredSpaceStreamId": -9,
                  "hourlyRawPropertyStreamId": -10,
                  "hourlyRawSpaceStreamId": -11,
                  "dailyFilteredPropertyStreamId": -4,
                  "dailyFilteredSpaceStreamId": -5,
                  "dailyRawPropertyStreamId": -6,
                  "dailyRawSpaceStreamId": -7,
                  "dailyPropertyDwellStreamId": -30,
                  "dailySpaceDwellStreamId": -80,
                  "dailyFloorStreamId": -55,
                  "monthlyPropertyDwellStreamId": -31,
                  "monthlySpaceDwellStreamId": -81,
                  "monthlyFilteredPropertyStreamId": -40,
                  "monthlyFilteredSpaceStreamId": -41,
                  "monthlyRawPropertyStreamId": -42,
                  "monthlyRawSpaceStreamId": -43,
                  "frequencyStreamId": -12,
                  "crossvisitorStreamId": -13,
                  "merakiDevicesStatusStreamId": -15,
                  "merakiDevicesStreamId": -14,
                  "socialwifiStreamId": -17,
                  "giftCardTransactionStreamId": -18,
                  "giftCardInfoStreamId": -19,
                  "dbhost": "domoloaderdb.c3gfjl5i1amd.us-west-2.rds.amazonaws.com",
                  "dbuser": "domo",
                  "dbpassword": "CFdomo!loader*_*",
                  "dbname": "domoloader",
                  "merakikey": "7640451cf175e0081031c7b251c8ae125ae6668f"
                }
              }
            },
            "DependsOn": [
              "MerakiDashdevicesDashstatusLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "AlDashdailyDashtrafficEventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "cron(0 9 * * ? *)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "AlDashdailyDashtrafficLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "al-daily-trafficSchedule"
                }
              ]
            },
            "DependsOn": []
          },
          "AlDashdailyDashtrafficUnderscorerefreshUnderscore8EventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "cron(0 0 * * ? *)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "AlDashdailyDashtrafficUnderscorerefreshUnderscore8LambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "al-daily-traffic_refresh_8Schedule"
                }
              ]
            },
            "DependsOn": []
          },
          "AlDashdailyDashtrafficUnderscorerefreshUnderscore15EventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "cron(30 00 * * ? *)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "AlDashdailyDashtrafficUnderscorerefreshUnderscore15LambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "al-daily-traffic_refresh_15Schedule"
                }
              ]
            },
            "DependsOn": []
          },
          "AlDashdailyDashtrafficUnderscorerefreshUnderscore22EventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "cron(00 1 * * ? *)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "AlDashdailyDashtrafficUnderscorerefreshUnderscore22LambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "al-daily-traffic_refresh_22Schedule"
                }
              ]
            },
            "DependsOn": []
          },
          "AlDashdailyDashtrafficUnderscorerefreshUnderscore29EventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "cron(30 1 * * ? *)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "AlDashdailyDashtrafficUnderscorerefreshUnderscore29LambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "al-daily-traffic_refresh_29Schedule"
                }
              ]
            },
            "DependsOn": []
          },
          "AlDashmonthlyDashtrafficEventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "cron(30 9 * * ? *)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "AlDashmonthlyDashtrafficLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "al-monthly-trafficSchedule"
                }
              ]
            },
            "DependsOn": []
          },
          "AlDashdailyDashdwellEventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "cron(0 10 * * ? *)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "AlDashdailyDashdwellLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "al-daily-dwellSchedule"
                }
              ]
            },
            "DependsOn": []
          },
          "AlDashdailyDashdwellUnderscorerefreshUnderscore8EventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "cron(00 2 * * ? *)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "AlDashdailyDashdwellUnderscorerefreshUnderscore8LambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "al-daily-dwell_refresh_8Schedule"
                }
              ]
            },
            "DependsOn": []
          },
          "AlDashdailyDashdwellUnderscorerefreshUnderscore15EventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "cron(30 2 * * ? *)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "AlDashdailyDashdwellUnderscorerefreshUnderscore15LambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "al-daily-dwell_refresh_15Schedule"
                }
              ]
            },
            "DependsOn": []
          },
          "AlDashdailyDashdwellUnderscorerefreshUnderscore22EventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "cron(00 3 * * ? *)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "AlDashdailyDashdwellUnderscorerefreshUnderscore22LambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "al-daily-dwell_refresh_22Schedule"
                }
              ]
            },
            "DependsOn": []
          },
          "AlDashdailyDashdwellUnderscorerefreshUnderscore29EventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "cron(30 3 * * ? *)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "AlDashdailyDashdwellUnderscorerefreshUnderscore29LambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "al-daily-dwell_refresh_29Schedule"
                }
              ]
            },
            "DependsOn": []
          },
          "AlDashvisitorDashflowEventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "cron(30 10 * * ? *)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "AlDashvisitorDashflowLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "al-visitor-flowSchedule"
                }
              ]
            },
            "DependsOn": []
          },
          "AlDashvisitorDashflowUnderscorerefreshUnderscore8EventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "cron(00 4 * * ? *)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "AlDashvisitorDashflowUnderscorerefreshUnderscore8LambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "al-visitor-flow_refresh_8Schedule"
                }
              ]
            },
            "DependsOn": []
          },
          "AlDashvisitorDashflowUnderscorerefreshUnderscore15EventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "cron(30 4 * * ? *)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "AlDashvisitorDashflowUnderscorerefreshUnderscore15LambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "al-visitor-flow_refresh_15Schedule"
                }
              ]
            },
            "DependsOn": []
          },
          "AlDashvisitorDashflowUnderscorerefreshUnderscore22EventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "cron(00 5 * * ? *)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "AlDashvisitorDashflowUnderscorerefreshUnderscore22LambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "al-visitor-flow_refresh_22Schedule"
                }
              ]
            },
            "DependsOn": []
          },
          "AlDashvisitorDashflowUnderscorerefreshUnderscore29EventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "cron(30 5 * * ? *)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "AlDashvisitorDashflowUnderscorerefreshUnderscore29LambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "al-visitor-flow_refresh_29Schedule"
                }
              ]
            },
            "DependsOn": []
          },
          "AlDashcrossvisitorEventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "cron(0 11 * * ? *)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "AlDashcrossvisitorLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "al-crossvisitorSchedule"
                }
              ]
            },
            "DependsOn": []
          },
          "AlDashsocialwifiEventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "cron(30 11 * * ? *)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "AlDashsocialwifiLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "al-socialwifiSchedule"
                }
              ]
            },
            "DependsOn": []
          },
          "AlDashsocialwifiUnderscorerefreshUnderscore8EventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "cron(00 13 * * ? *)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "AlDashsocialwifiUnderscorerefreshUnderscore8LambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "al-socialwifi_refresh_8Schedule"
                }
              ]
            },
            "DependsOn": []
          },
          "AlDashsocialwifiUnderscorerefreshUnderscore15EventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "cron(00 14 * * ? *)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "AlDashsocialwifiUnderscorerefreshUnderscore15LambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "al-socialwifi_refresh_15Schedule"
                }
              ]
            },
            "DependsOn": []
          },
          "AlDashsocialwifiUnderscorerefreshUnderscore22EventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "cron(00 15 * * ? *)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "AlDashsocialwifiUnderscorerefreshUnderscore22LambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "al-socialwifi_refresh_22Schedule"
                }
              ]
            },
            "DependsOn": []
          },
          "AlDashsocialwifiUnderscorerefreshUnderscore29EventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "cron(00 16 * * ? *)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "AlDashsocialwifiUnderscorerefreshUnderscore29LambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "al-socialwifi_refresh_29Schedule"
                }
              ]
            },
            "DependsOn": []
          },
          "GfDashgiftcardDashtransactionEventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "cron(45 12 * * ? *)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "GfDashgiftcardDashtransactionLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "gf-giftcard-transactionSchedule"
                }
              ]
            },
            "DependsOn": []
          },
          "GfDashgiftcardDashinfoEventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "cron(30 12 * * ? *)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "GfDashgiftcardDashinfoLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "gf-giftcard-infoSchedule"
                }
              ]
            },
            "DependsOn": []
          },
          "ApiGatewayMethodV1AislelabsDailytrafficGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayResourceV1AislelabsDailytraffic"
                ]
              },
              "RestApiId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayRestApi"
                ]
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AlDashdailyDashtrafficUnderscorerefreshUnderscore29LambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "APINestedStack"
            ]
          },
          "ApiGatewayMethodV1AislelabsMonthlytrafficGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayResourceV1AislelabsMonthlytraffic"
                ]
              },
              "RestApiId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayRestApi"
                ]
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AlDashmonthlyDashtrafficLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "APINestedStack"
            ]
          },
          "ApiGatewayMethodV1AislelabsDailydwellGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayResourceV1AislelabsDailydwell"
                ]
              },
              "RestApiId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayRestApi"
                ]
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AlDashdailyDashdwellUnderscorerefreshUnderscore29LambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "APINestedStack"
            ]
          },
          "ApiGatewayMethodV1AislelabsVisitorflowGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayResourceV1AislelabsVisitorflow"
                ]
              },
              "RestApiId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayRestApi"
                ]
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AlDashvisitorDashflowUnderscorerefreshUnderscore29LambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "APINestedStack"
            ]
          },
          "ApiGatewayMethodV1AislelabsCrossvisitorGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayResourceV1AislelabsCrossvisitor"
                ]
              },
              "RestApiId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayRestApi"
                ]
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AlDashcrossvisitorLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "APINestedStack"
            ]
          },
          "ApiGatewayMethodV1AislelabsSocialwifiGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayResourceV1AislelabsSocialwifi"
                ]
              },
              "RestApiId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayRestApi"
                ]
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AlDashsocialwifiUnderscorerefreshUnderscore29LambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "APINestedStack"
            ]
          },
          "ApiGatewayMethodV1GiftcardGiftcardtransactionGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayResourceV1GiftcardGiftcardtransaction"
                ]
              },
              "RestApiId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayRestApi"
                ]
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GfDashgiftcardDashtransactionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "APINestedStack"
            ]
          },
          "ApiGatewayMethodV1GiftcardGiftcardinfoGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayResourceV1GiftcardGiftcardinfo"
                ]
              },
              "RestApiId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayRestApi"
                ]
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GfDashgiftcardDashinfoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "APINestedStack"
            ]
          },
          "ApiGatewayMethodV1SchedulesalesctiunitGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayResourceV1Schedulesalesctiunit"
                ]
              },
              "RestApiId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayRestApi"
                ]
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ScheduleDashsalesDashctiDashunitLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "APINestedStack"
            ]
          },
          "ApiGatewayMethodV1SchedulesalesrciscategoryGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayResourceV1Schedulesalesrciscategory"
                ]
              },
              "RestApiId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayRestApi"
                ]
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ScheduleDashsalesDashrcisDashcategoryLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "APINestedStack"
            ]
          },
          "ApiGatewayMethodV1BackfillsalescticategoryGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayResourceV1Backfillsalescticategory"
                ]
              },
              "RestApiId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayRestApi"
                ]
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "BackfillDashsalesDashctiDashcategoryLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "APINestedStack"
            ]
          },
          "ApiGatewayMethodV1BackfillsalesctiprojectGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayResourceV1Backfillsalesctiproject"
                ]
              },
              "RestApiId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayRestApi"
                ]
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "BackfillDashsalesDashctiDashprojectLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "APINestedStack"
            ]
          },
          "ApiGatewayMethodV1BackfillsalesctispaceGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayResourceV1Backfillsalesctispace"
                ]
              },
              "RestApiId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayRestApi"
                ]
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "BackfillDashsalesDashctiDashspaceLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "APINestedStack"
            ]
          },
          "ApiGatewayMethodV1BackfillsalesctistoreGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayResourceV1Backfillsalesctistore"
                ]
              },
              "RestApiId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayRestApi"
                ]
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "BackfillDashsalesDashctiDashstoreLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "APINestedStack"
            ]
          },
          "ApiGatewayMethodV1BackfillsalesctitenantGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayResourceV1Backfillsalesctitenant"
                ]
              },
              "RestApiId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayRestApi"
                ]
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "BackfillDashsalesDashctiDashtenantLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "APINestedStack"
            ]
          },
          "ApiGatewayMethodV1BackfillsalesctiunitGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayResourceV1Backfillsalesctiunit"
                ]
              },
              "RestApiId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayRestApi"
                ]
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "BackfillDashsalesDashctiDashunitLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "APINestedStack"
            ]
          },
          "ApiGatewayMethodV1BackfillsalesrciscategoryGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayResourceV1Backfillsalesrciscategory"
                ]
              },
              "RestApiId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayRestApi"
                ]
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "BackfillDashsalesDashrcisDashcategoryLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "APINestedStack"
            ]
          },
          "ApiGatewayMethodV1MerakiDevicesGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayResourceV1MerakiDevices"
                ]
              },
              "RestApiId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayRestApi"
                ]
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "MerakiDashdevicesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "APINestedStack"
            ]
          },
          "ApiGatewayMethodV1MerakiDevicesstatusGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayResourceV1MerakiDevicesstatus"
                ]
              },
              "RestApiId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayRestApi"
                ]
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "MerakiDashdevicesDashstatusLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "APINestedStack"
            ]
          },
          "ApiGatewayDeployment1565742785422": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayRestApi"
                ]
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodV1AislelabsDailytrafficGet",
              "ApiGatewayMethodV1AislelabsMonthlytrafficGet",
              "ApiGatewayMethodV1AislelabsDailydwellGet",
              "ApiGatewayMethodV1AislelabsVisitorflowGet",
              "ApiGatewayMethodV1AislelabsCrossvisitorGet",
              "ApiGatewayMethodV1AislelabsSocialwifiGet",
              "ApiGatewayMethodV1GiftcardGiftcardtransactionGet",
              "ApiGatewayMethodV1GiftcardGiftcardinfoGet",
              "ApiGatewayMethodV1SchedulesalesctiunitGet",
              "ApiGatewayMethodV1SchedulesalesrciscategoryGet",
              "ApiGatewayMethodV1BackfillsalescticategoryGet",
              "ApiGatewayMethodV1BackfillsalesctiprojectGet",
              "ApiGatewayMethodV1BackfillsalesctispaceGet",
              "ApiGatewayMethodV1BackfillsalesctistoreGet",
              "ApiGatewayMethodV1BackfillsalesctitenantGet",
              "ApiGatewayMethodV1BackfillsalesctiunitGet",
              "ApiGatewayMethodV1BackfillsalesrciscategoryGet",
              "ApiGatewayMethodV1MerakiDevicesGet",
              "ApiGatewayMethodV1MerakiDevicesstatusGet",
              "APINestedStack"
            ]
          },
          "AwsAlertsAlarm": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
              "TopicName": "cf-domo-loader-alerts-alarm",
              "Subscription": [
                {
                  "Protocol": "email",
                  "Endpoint": "alessandro.lenares@cadillacfairview.com"
                }
              ]
            },
            "DependsOn": []
          },
          "ExtractKinesis": {
            "Type": "AWS::Kinesis::Stream",
            "Properties": {
              "Name": "CF_ExtractKinesis",
              "ShardCount": 2
            },
            "DependsOn": []
          },
          "ExtractKinesisMap": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": [
              "ExtractLambdaFunction"
            ],
            "Properties": {
              "BatchSize": 1,
              "EventSourceArn": {
                "Fn::GetAtt": [
                  "ExtractKinesis",
                  "Arn"
                ]
              },
              "FunctionName": {
                "Fn::GetAtt": [
                  "ExtractLambdaFunction",
                  "Arn"
                ]
              },
              "StartingPosition": "TRIM_HORIZON"
            }
          },
          "DomoLoaderKinesis": {
            "Type": "AWS::Kinesis::Stream",
            "Properties": {
              "Name": "CF_DomoLoaderKinesis",
              "ShardCount": 2
            },
            "DependsOn": []
          },
          "LoaderKinesisMap": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": [
              "LoadLambdaFunction"
            ],
            "Properties": {
              "BatchSize": 10000,
              "EventSourceArn": {
                "Fn::GetAtt": [
                  "DomoLoaderKinesis",
                  "Arn"
                ]
              },
              "FunctionName": {
                "Fn::GetAtt": [
                  "LoadLambdaFunction",
                  "Arn"
                ]
              },
              "StartingPosition": "TRIM_HORIZON"
            }
          },
          "AlarmsNestedStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
              "Parameters": {
                "AlDashdailyDashtrafficLambdaFunctionParameter": {
                  "Ref": "AlDashdailyDashtrafficLambdaFunction"
                },
                "AwsAlertsAlarmParameter": {
                  "Ref": "AwsAlertsAlarm"
                },
                "AlDashdailyDashtrafficUnderscorerefreshUnderscore8LambdaFunctionParameter": {
                  "Ref": "AlDashdailyDashtrafficUnderscorerefreshUnderscore8LambdaFunction"
                },
                "AlDashdailyDashtrafficUnderscorerefreshUnderscore15LambdaFunctionParameter": {
                  "Ref": "AlDashdailyDashtrafficUnderscorerefreshUnderscore15LambdaFunction"
                },
                "AlDashdailyDashtrafficUnderscorerefreshUnderscore22LambdaFunctionParameter": {
                  "Ref": "AlDashdailyDashtrafficUnderscorerefreshUnderscore22LambdaFunction"
                },
                "AlDashdailyDashtrafficUnderscorerefreshUnderscore29LambdaFunctionParameter": {
                  "Ref": "AlDashdailyDashtrafficUnderscorerefreshUnderscore29LambdaFunction"
                },
                "AlDashmonthlyDashtrafficLambdaFunctionParameter": {
                  "Ref": "AlDashmonthlyDashtrafficLambdaFunction"
                },
                "AlDashdailyDashdwellLambdaFunctionParameter": {
                  "Ref": "AlDashdailyDashdwellLambdaFunction"
                },
                "AlDashdailyDashdwellUnderscorerefreshUnderscore8LambdaFunctionParameter": {
                  "Ref": "AlDashdailyDashdwellUnderscorerefreshUnderscore8LambdaFunction"
                },
                "AlDashdailyDashdwellUnderscorerefreshUnderscore15LambdaFunctionParameter": {
                  "Ref": "AlDashdailyDashdwellUnderscorerefreshUnderscore15LambdaFunction"
                },
                "AlDashdailyDashdwellUnderscorerefreshUnderscore22LambdaFunctionParameter": {
                  "Ref": "AlDashdailyDashdwellUnderscorerefreshUnderscore22LambdaFunction"
                },
                "AlDashdailyDashdwellUnderscorerefreshUnderscore29LambdaFunctionParameter": {
                  "Ref": "AlDashdailyDashdwellUnderscorerefreshUnderscore29LambdaFunction"
                },
                "AlDashvisitorDashflowLambdaFunctionParameter": {
                  "Ref": "AlDashvisitorDashflowLambdaFunction"
                },
                "AlDashvisitorDashflowUnderscorerefreshUnderscore8LambdaFunctionParameter": {
                  "Ref": "AlDashvisitorDashflowUnderscorerefreshUnderscore8LambdaFunction"
                },
                "AlDashvisitorDashflowUnderscorerefreshUnderscore15LambdaFunctionParameter": {
                  "Ref": "AlDashvisitorDashflowUnderscorerefreshUnderscore15LambdaFunction"
                },
                "AlDashvisitorDashflowUnderscorerefreshUnderscore22LambdaFunctionParameter": {
                  "Ref": "AlDashvisitorDashflowUnderscorerefreshUnderscore22LambdaFunction"
                },
                "AlDashvisitorDashflowUnderscorerefreshUnderscore29LambdaFunctionParameter": {
                  "Ref": "AlDashvisitorDashflowUnderscorerefreshUnderscore29LambdaFunction"
                },
                "AlDashcrossvisitorLambdaFunctionParameter": {
                  "Ref": "AlDashcrossvisitorLambdaFunction"
                },
                "MerakiDashdevicesLambdaFunctionParameter": {
                  "Ref": "MerakiDashdevicesLambdaFunction"
                },
                "MerakiDashdevicesDashstatusLambdaFunctionParameter": {
                  "Ref": "MerakiDashdevicesDashstatusLambdaFunction"
                }
              },
              "TemplateURL": {
                "Fn::Join": [
                  "/",
                  [
                    "https://s3.amazonaws.com",
                    {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z",
                    "cloudformation-template-Alarms-nested-stack.json"
                  ]
                ]
              }
            },
            "DependsOn": [
              "AlDashdailyDashtrafficLambdaFunction",
              "AwsAlertsAlarm",
              "AlDashdailyDashtrafficUnderscorerefreshUnderscore8LambdaFunction",
              "AlDashdailyDashtrafficUnderscorerefreshUnderscore15LambdaFunction",
              "AlDashdailyDashtrafficUnderscorerefreshUnderscore22LambdaFunction",
              "AlDashdailyDashtrafficUnderscorerefreshUnderscore29LambdaFunction",
              "AlDashmonthlyDashtrafficLambdaFunction",
              "AlDashdailyDashdwellLambdaFunction",
              "AlDashdailyDashdwellUnderscorerefreshUnderscore8LambdaFunction",
              "AlDashdailyDashdwellUnderscorerefreshUnderscore15LambdaFunction",
              "AlDashdailyDashdwellUnderscorerefreshUnderscore22LambdaFunction",
              "AlDashdailyDashdwellUnderscorerefreshUnderscore29LambdaFunction",
              "AlDashvisitorDashflowLambdaFunction",
              "AlDashvisitorDashflowUnderscorerefreshUnderscore8LambdaFunction",
              "AlDashvisitorDashflowUnderscorerefreshUnderscore15LambdaFunction",
              "AlDashvisitorDashflowUnderscorerefreshUnderscore22LambdaFunction",
              "AlDashvisitorDashflowUnderscorerefreshUnderscore29LambdaFunction",
              "AlDashcrossvisitorLambdaFunction",
              "MerakiDashdevicesLambdaFunction",
              "MerakiDashdevicesDashstatusLambdaFunction"
            ]
          },
          "APINestedStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
              "Parameters": {},
              "TemplateURL": {
                "Fn::Join": [
                  "/",
                  [
                    "https://s3.amazonaws.com",
                    {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z",
                    "cloudformation-template-API-nested-stack.json"
                  ]
                ]
              }
            }
          },
          "PermissionsNestedStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
              "Parameters": {
                "AlDashdailyDashtrafficEventsRuleSchedule1ArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashdailyDashtrafficEventsRuleSchedule1",
                    "Arn"
                  ]
                },
                "AlDashdailyDashtrafficLambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashdailyDashtrafficLambdaFunction",
                    "Arn"
                  ]
                },
                "AlDashdailyDashtrafficUnderscorerefreshUnderscore8EventsRuleSchedule1ArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashdailyDashtrafficUnderscorerefreshUnderscore8EventsRuleSchedule1",
                    "Arn"
                  ]
                },
                "AlDashdailyDashtrafficUnderscorerefreshUnderscore8LambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashdailyDashtrafficUnderscorerefreshUnderscore8LambdaFunction",
                    "Arn"
                  ]
                },
                "AlDashdailyDashtrafficUnderscorerefreshUnderscore15EventsRuleSchedule1ArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashdailyDashtrafficUnderscorerefreshUnderscore15EventsRuleSchedule1",
                    "Arn"
                  ]
                },
                "AlDashdailyDashtrafficUnderscorerefreshUnderscore15LambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashdailyDashtrafficUnderscorerefreshUnderscore15LambdaFunction",
                    "Arn"
                  ]
                },
                "AlDashdailyDashtrafficUnderscorerefreshUnderscore22EventsRuleSchedule1ArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashdailyDashtrafficUnderscorerefreshUnderscore22EventsRuleSchedule1",
                    "Arn"
                  ]
                },
                "AlDashdailyDashtrafficUnderscorerefreshUnderscore22LambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashdailyDashtrafficUnderscorerefreshUnderscore22LambdaFunction",
                    "Arn"
                  ]
                },
                "AlDashdailyDashtrafficUnderscorerefreshUnderscore29EventsRuleSchedule1ArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashdailyDashtrafficUnderscorerefreshUnderscore29EventsRuleSchedule1",
                    "Arn"
                  ]
                },
                "AlDashdailyDashtrafficUnderscorerefreshUnderscore29LambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashdailyDashtrafficUnderscorerefreshUnderscore29LambdaFunction",
                    "Arn"
                  ]
                },
                "AlDashmonthlyDashtrafficEventsRuleSchedule1ArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashmonthlyDashtrafficEventsRuleSchedule1",
                    "Arn"
                  ]
                },
                "AlDashmonthlyDashtrafficLambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashmonthlyDashtrafficLambdaFunction",
                    "Arn"
                  ]
                },
                "AlDashdailyDashdwellEventsRuleSchedule1ArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashdailyDashdwellEventsRuleSchedule1",
                    "Arn"
                  ]
                },
                "AlDashdailyDashdwellLambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashdailyDashdwellLambdaFunction",
                    "Arn"
                  ]
                },
                "AlDashdailyDashdwellUnderscorerefreshUnderscore8EventsRuleSchedule1ArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashdailyDashdwellUnderscorerefreshUnderscore8EventsRuleSchedule1",
                    "Arn"
                  ]
                },
                "AlDashdailyDashdwellUnderscorerefreshUnderscore8LambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashdailyDashdwellUnderscorerefreshUnderscore8LambdaFunction",
                    "Arn"
                  ]
                },
                "AlDashdailyDashdwellUnderscorerefreshUnderscore15EventsRuleSchedule1ArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashdailyDashdwellUnderscorerefreshUnderscore15EventsRuleSchedule1",
                    "Arn"
                  ]
                },
                "AlDashdailyDashdwellUnderscorerefreshUnderscore15LambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashdailyDashdwellUnderscorerefreshUnderscore15LambdaFunction",
                    "Arn"
                  ]
                },
                "AlDashdailyDashdwellUnderscorerefreshUnderscore22EventsRuleSchedule1ArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashdailyDashdwellUnderscorerefreshUnderscore22EventsRuleSchedule1",
                    "Arn"
                  ]
                },
                "AlDashdailyDashdwellUnderscorerefreshUnderscore22LambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashdailyDashdwellUnderscorerefreshUnderscore22LambdaFunction",
                    "Arn"
                  ]
                },
                "AlDashdailyDashdwellUnderscorerefreshUnderscore29EventsRuleSchedule1ArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashdailyDashdwellUnderscorerefreshUnderscore29EventsRuleSchedule1",
                    "Arn"
                  ]
                },
                "AlDashdailyDashdwellUnderscorerefreshUnderscore29LambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashdailyDashdwellUnderscorerefreshUnderscore29LambdaFunction",
                    "Arn"
                  ]
                },
                "AlDashvisitorDashflowEventsRuleSchedule1ArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashvisitorDashflowEventsRuleSchedule1",
                    "Arn"
                  ]
                },
                "AlDashvisitorDashflowLambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashvisitorDashflowLambdaFunction",
                    "Arn"
                  ]
                },
                "AlDashvisitorDashflowUnderscorerefreshUnderscore8EventsRuleSchedule1ArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashvisitorDashflowUnderscorerefreshUnderscore8EventsRuleSchedule1",
                    "Arn"
                  ]
                },
                "AlDashvisitorDashflowUnderscorerefreshUnderscore8LambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashvisitorDashflowUnderscorerefreshUnderscore8LambdaFunction",
                    "Arn"
                  ]
                },
                "AlDashvisitorDashflowUnderscorerefreshUnderscore15EventsRuleSchedule1ArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashvisitorDashflowUnderscorerefreshUnderscore15EventsRuleSchedule1",
                    "Arn"
                  ]
                },
                "AlDashvisitorDashflowUnderscorerefreshUnderscore15LambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashvisitorDashflowUnderscorerefreshUnderscore15LambdaFunction",
                    "Arn"
                  ]
                },
                "AlDashvisitorDashflowUnderscorerefreshUnderscore22EventsRuleSchedule1ArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashvisitorDashflowUnderscorerefreshUnderscore22EventsRuleSchedule1",
                    "Arn"
                  ]
                },
                "AlDashvisitorDashflowUnderscorerefreshUnderscore22LambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashvisitorDashflowUnderscorerefreshUnderscore22LambdaFunction",
                    "Arn"
                  ]
                },
                "AlDashvisitorDashflowUnderscorerefreshUnderscore29EventsRuleSchedule1ArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashvisitorDashflowUnderscorerefreshUnderscore29EventsRuleSchedule1",
                    "Arn"
                  ]
                },
                "AlDashvisitorDashflowUnderscorerefreshUnderscore29LambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashvisitorDashflowUnderscorerefreshUnderscore29LambdaFunction",
                    "Arn"
                  ]
                },
                "AlDashcrossvisitorEventsRuleSchedule1ArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashcrossvisitorEventsRuleSchedule1",
                    "Arn"
                  ]
                },
                "AlDashcrossvisitorLambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashcrossvisitorLambdaFunction",
                    "Arn"
                  ]
                },
                "AlDashsocialwifiEventsRuleSchedule1ArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashsocialwifiEventsRuleSchedule1",
                    "Arn"
                  ]
                },
                "AlDashsocialwifiLambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashsocialwifiLambdaFunction",
                    "Arn"
                  ]
                },
                "AlDashsocialwifiUnderscorerefreshUnderscore8EventsRuleSchedule1ArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashsocialwifiUnderscorerefreshUnderscore8EventsRuleSchedule1",
                    "Arn"
                  ]
                },
                "AlDashsocialwifiUnderscorerefreshUnderscore8LambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashsocialwifiUnderscorerefreshUnderscore8LambdaFunction",
                    "Arn"
                  ]
                },
                "AlDashsocialwifiUnderscorerefreshUnderscore15EventsRuleSchedule1ArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashsocialwifiUnderscorerefreshUnderscore15EventsRuleSchedule1",
                    "Arn"
                  ]
                },
                "AlDashsocialwifiUnderscorerefreshUnderscore15LambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashsocialwifiUnderscorerefreshUnderscore15LambdaFunction",
                    "Arn"
                  ]
                },
                "AlDashsocialwifiUnderscorerefreshUnderscore22EventsRuleSchedule1ArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashsocialwifiUnderscorerefreshUnderscore22EventsRuleSchedule1",
                    "Arn"
                  ]
                },
                "AlDashsocialwifiUnderscorerefreshUnderscore22LambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashsocialwifiUnderscorerefreshUnderscore22LambdaFunction",
                    "Arn"
                  ]
                },
                "AlDashsocialwifiUnderscorerefreshUnderscore29EventsRuleSchedule1ArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashsocialwifiUnderscorerefreshUnderscore29EventsRuleSchedule1",
                    "Arn"
                  ]
                },
                "AlDashsocialwifiUnderscorerefreshUnderscore29LambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "AlDashsocialwifiUnderscorerefreshUnderscore29LambdaFunction",
                    "Arn"
                  ]
                },
                "GfDashgiftcardDashtransactionEventsRuleSchedule1ArnParameter": {
                  "Fn::GetAtt": [
                    "GfDashgiftcardDashtransactionEventsRuleSchedule1",
                    "Arn"
                  ]
                },
                "GfDashgiftcardDashtransactionLambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "GfDashgiftcardDashtransactionLambdaFunction",
                    "Arn"
                  ]
                },
                "GfDashgiftcardDashinfoEventsRuleSchedule1ArnParameter": {
                  "Fn::GetAtt": [
                    "GfDashgiftcardDashinfoEventsRuleSchedule1",
                    "Arn"
                  ]
                },
                "GfDashgiftcardDashinfoLambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "GfDashgiftcardDashinfoLambdaFunction",
                    "Arn"
                  ]
                },
                "ApiGatewayRestApiParameter": {
                  "Fn::GetAtt": [
                    "APINestedStack",
                    "Outputs.ApiGatewayRestApi"
                  ]
                },
                "ScheduleDashsalesDashctiDashunitLambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "ScheduleDashsalesDashctiDashunitLambdaFunction",
                    "Arn"
                  ]
                },
                "ScheduleDashsalesDashrcisDashcategoryLambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "ScheduleDashsalesDashrcisDashcategoryLambdaFunction",
                    "Arn"
                  ]
                },
                "BackfillDashsalesDashctiDashcategoryLambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "BackfillDashsalesDashctiDashcategoryLambdaFunction",
                    "Arn"
                  ]
                },
                "BackfillDashsalesDashctiDashprojectLambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "BackfillDashsalesDashctiDashprojectLambdaFunction",
                    "Arn"
                  ]
                },
                "BackfillDashsalesDashctiDashspaceLambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "BackfillDashsalesDashctiDashspaceLambdaFunction",
                    "Arn"
                  ]
                },
                "BackfillDashsalesDashctiDashstoreLambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "BackfillDashsalesDashctiDashstoreLambdaFunction",
                    "Arn"
                  ]
                },
                "BackfillDashsalesDashctiDashtenantLambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "BackfillDashsalesDashctiDashtenantLambdaFunction",
                    "Arn"
                  ]
                },
                "BackfillDashsalesDashctiDashunitLambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "BackfillDashsalesDashctiDashunitLambdaFunction",
                    "Arn"
                  ]
                },
                "BackfillDashsalesDashrcisDashcategoryLambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "BackfillDashsalesDashrcisDashcategoryLambdaFunction",
                    "Arn"
                  ]
                },
                "MerakiDashdevicesLambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "MerakiDashdevicesLambdaFunction",
                    "Arn"
                  ]
                },
                "MerakiDashdevicesDashstatusLambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "MerakiDashdevicesDashstatusLambdaFunction",
                    "Arn"
                  ]
                }
              },
              "TemplateURL": {
                "Fn::Join": [
                  "/",
                  [
                    "https://s3.amazonaws.com",
                    {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z",
                    "cloudformation-template-Permissions-nested-stack.json"
                  ]
                ]
              }
            },
            "DependsOn": [
              "AlDashdailyDashtrafficEventsRuleSchedule1",
              "AlDashdailyDashtrafficLambdaFunction",
              "AlDashdailyDashtrafficUnderscorerefreshUnderscore8EventsRuleSchedule1",
              "AlDashdailyDashtrafficUnderscorerefreshUnderscore8LambdaFunction",
              "AlDashdailyDashtrafficUnderscorerefreshUnderscore15EventsRuleSchedule1",
              "AlDashdailyDashtrafficUnderscorerefreshUnderscore15LambdaFunction",
              "AlDashdailyDashtrafficUnderscorerefreshUnderscore22EventsRuleSchedule1",
              "AlDashdailyDashtrafficUnderscorerefreshUnderscore22LambdaFunction",
              "AlDashdailyDashtrafficUnderscorerefreshUnderscore29EventsRuleSchedule1",
              "AlDashdailyDashtrafficUnderscorerefreshUnderscore29LambdaFunction",
              "AlDashmonthlyDashtrafficEventsRuleSchedule1",
              "AlDashmonthlyDashtrafficLambdaFunction",
              "AlDashdailyDashdwellEventsRuleSchedule1",
              "AlDashdailyDashdwellLambdaFunction",
              "AlDashdailyDashdwellUnderscorerefreshUnderscore8EventsRuleSchedule1",
              "AlDashdailyDashdwellUnderscorerefreshUnderscore8LambdaFunction",
              "AlDashdailyDashdwellUnderscorerefreshUnderscore15EventsRuleSchedule1",
              "AlDashdailyDashdwellUnderscorerefreshUnderscore15LambdaFunction",
              "AlDashdailyDashdwellUnderscorerefreshUnderscore22EventsRuleSchedule1",
              "AlDashdailyDashdwellUnderscorerefreshUnderscore22LambdaFunction",
              "AlDashdailyDashdwellUnderscorerefreshUnderscore29EventsRuleSchedule1",
              "AlDashdailyDashdwellUnderscorerefreshUnderscore29LambdaFunction",
              "AlDashvisitorDashflowEventsRuleSchedule1",
              "AlDashvisitorDashflowLambdaFunction",
              "AlDashvisitorDashflowUnderscorerefreshUnderscore8EventsRuleSchedule1",
              "AlDashvisitorDashflowUnderscorerefreshUnderscore8LambdaFunction",
              "AlDashvisitorDashflowUnderscorerefreshUnderscore15EventsRuleSchedule1",
              "AlDashvisitorDashflowUnderscorerefreshUnderscore15LambdaFunction",
              "AlDashvisitorDashflowUnderscorerefreshUnderscore22EventsRuleSchedule1",
              "AlDashvisitorDashflowUnderscorerefreshUnderscore22LambdaFunction",
              "AlDashvisitorDashflowUnderscorerefreshUnderscore29EventsRuleSchedule1",
              "AlDashvisitorDashflowUnderscorerefreshUnderscore29LambdaFunction",
              "AlDashcrossvisitorEventsRuleSchedule1",
              "AlDashcrossvisitorLambdaFunction",
              "AlDashsocialwifiEventsRuleSchedule1",
              "AlDashsocialwifiLambdaFunction",
              "AlDashsocialwifiUnderscorerefreshUnderscore8EventsRuleSchedule1",
              "AlDashsocialwifiUnderscorerefreshUnderscore8LambdaFunction",
              "AlDashsocialwifiUnderscorerefreshUnderscore15EventsRuleSchedule1",
              "AlDashsocialwifiUnderscorerefreshUnderscore15LambdaFunction",
              "AlDashsocialwifiUnderscorerefreshUnderscore22EventsRuleSchedule1",
              "AlDashsocialwifiUnderscorerefreshUnderscore22LambdaFunction",
              "AlDashsocialwifiUnderscorerefreshUnderscore29EventsRuleSchedule1",
              "AlDashsocialwifiUnderscorerefreshUnderscore29LambdaFunction",
              "GfDashgiftcardDashtransactionEventsRuleSchedule1",
              "GfDashgiftcardDashtransactionLambdaFunction",
              "GfDashgiftcardDashinfoEventsRuleSchedule1",
              "GfDashgiftcardDashinfoLambdaFunction",
              "APINestedStack",
              "ScheduleDashsalesDashctiDashunitLambdaFunction",
              "ScheduleDashsalesDashrcisDashcategoryLambdaFunction",
              "BackfillDashsalesDashctiDashcategoryLambdaFunction",
              "BackfillDashsalesDashctiDashprojectLambdaFunction",
              "BackfillDashsalesDashctiDashspaceLambdaFunction",
              "BackfillDashsalesDashctiDashstoreLambdaFunction",
              "BackfillDashsalesDashctiDashtenantLambdaFunction",
              "BackfillDashsalesDashctiDashunitLambdaFunction",
              "BackfillDashsalesDashrcisDashcategoryLambdaFunction",
              "MerakiDashdevicesLambdaFunction",
              "MerakiDashdevicesDashstatusLambdaFunction"
            ]
          },
          "VersionsNestedStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
              "Parameters": {
                "TransformLambdaFunctionParameter": {
                  "Ref": "TransformLambdaFunction"
                },
                "LoadLambdaFunctionParameter": {
                  "Ref": "LoadLambdaFunction"
                },
                "ExtractLambdaFunctionParameter": {
                  "Ref": "ExtractLambdaFunction"
                },
                "AlDashdailyDashtrafficLambdaFunctionParameter": {
                  "Ref": "AlDashdailyDashtrafficLambdaFunction"
                },
                "AlDashdailyDashtrafficUnderscorerefreshUnderscore8LambdaFunctionParameter": {
                  "Ref": "AlDashdailyDashtrafficUnderscorerefreshUnderscore8LambdaFunction"
                },
                "AlDashdailyDashtrafficUnderscorerefreshUnderscore15LambdaFunctionParameter": {
                  "Ref": "AlDashdailyDashtrafficUnderscorerefreshUnderscore15LambdaFunction"
                },
                "AlDashdailyDashtrafficUnderscorerefreshUnderscore22LambdaFunctionParameter": {
                  "Ref": "AlDashdailyDashtrafficUnderscorerefreshUnderscore22LambdaFunction"
                },
                "AlDashdailyDashtrafficUnderscorerefreshUnderscore29LambdaFunctionParameter": {
                  "Ref": "AlDashdailyDashtrafficUnderscorerefreshUnderscore29LambdaFunction"
                },
                "AlDashmonthlyDashtrafficLambdaFunctionParameter": {
                  "Ref": "AlDashmonthlyDashtrafficLambdaFunction"
                },
                "AlDashdailyDashdwellLambdaFunctionParameter": {
                  "Ref": "AlDashdailyDashdwellLambdaFunction"
                },
                "AlDashdailyDashdwellUnderscorerefreshUnderscore8LambdaFunctionParameter": {
                  "Ref": "AlDashdailyDashdwellUnderscorerefreshUnderscore8LambdaFunction"
                },
                "AlDashdailyDashdwellUnderscorerefreshUnderscore15LambdaFunctionParameter": {
                  "Ref": "AlDashdailyDashdwellUnderscorerefreshUnderscore15LambdaFunction"
                },
                "AlDashdailyDashdwellUnderscorerefreshUnderscore22LambdaFunctionParameter": {
                  "Ref": "AlDashdailyDashdwellUnderscorerefreshUnderscore22LambdaFunction"
                },
                "AlDashdailyDashdwellUnderscorerefreshUnderscore29LambdaFunctionParameter": {
                  "Ref": "AlDashdailyDashdwellUnderscorerefreshUnderscore29LambdaFunction"
                },
                "AlDashvisitorDashflowLambdaFunctionParameter": {
                  "Ref": "AlDashvisitorDashflowLambdaFunction"
                },
                "AlDashvisitorDashflowUnderscorerefreshUnderscore8LambdaFunctionParameter": {
                  "Ref": "AlDashvisitorDashflowUnderscorerefreshUnderscore8LambdaFunction"
                },
                "AlDashvisitorDashflowUnderscorerefreshUnderscore15LambdaFunctionParameter": {
                  "Ref": "AlDashvisitorDashflowUnderscorerefreshUnderscore15LambdaFunction"
                },
                "AlDashvisitorDashflowUnderscorerefreshUnderscore22LambdaFunctionParameter": {
                  "Ref": "AlDashvisitorDashflowUnderscorerefreshUnderscore22LambdaFunction"
                },
                "AlDashvisitorDashflowUnderscorerefreshUnderscore29LambdaFunctionParameter": {
                  "Ref": "AlDashvisitorDashflowUnderscorerefreshUnderscore29LambdaFunction"
                },
                "AlDashcrossvisitorLambdaFunctionParameter": {
                  "Ref": "AlDashcrossvisitorLambdaFunction"
                },
                "AlDashsocialwifiLambdaFunctionParameter": {
                  "Ref": "AlDashsocialwifiLambdaFunction"
                },
                "AlDashsocialwifiUnderscorerefreshUnderscore8LambdaFunctionParameter": {
                  "Ref": "AlDashsocialwifiUnderscorerefreshUnderscore8LambdaFunction"
                },
                "AlDashsocialwifiUnderscorerefreshUnderscore15LambdaFunctionParameter": {
                  "Ref": "AlDashsocialwifiUnderscorerefreshUnderscore15LambdaFunction"
                },
                "AlDashsocialwifiUnderscorerefreshUnderscore22LambdaFunctionParameter": {
                  "Ref": "AlDashsocialwifiUnderscorerefreshUnderscore22LambdaFunction"
                },
                "AlDashsocialwifiUnderscorerefreshUnderscore29LambdaFunctionParameter": {
                  "Ref": "AlDashsocialwifiUnderscorerefreshUnderscore29LambdaFunction"
                },
                "GfDashgiftcardDashtransactionLambdaFunctionParameter": {
                  "Ref": "GfDashgiftcardDashtransactionLambdaFunction"
                },
                "GfDashgiftcardDashinfoLambdaFunctionParameter": {
                  "Ref": "GfDashgiftcardDashinfoLambdaFunction"
                },
                "ScheduleDashsalesDashctiDashunitLambdaFunctionParameter": {
                  "Ref": "ScheduleDashsalesDashctiDashunitLambdaFunction"
                },
                "ScheduleDashsalesDashrcisDashcategoryLambdaFunctionParameter": {
                  "Ref": "ScheduleDashsalesDashrcisDashcategoryLambdaFunction"
                },
                "BackfillDashsalesDashctiDashcategoryLambdaFunctionParameter": {
                  "Ref": "BackfillDashsalesDashctiDashcategoryLambdaFunction"
                },
                "BackfillDashsalesDashctiDashprojectLambdaFunctionParameter": {
                  "Ref": "BackfillDashsalesDashctiDashprojectLambdaFunction"
                },
                "BackfillDashsalesDashctiDashspaceLambdaFunctionParameter": {
                  "Ref": "BackfillDashsalesDashctiDashspaceLambdaFunction"
                },
                "BackfillDashsalesDashctiDashstoreLambdaFunctionParameter": {
                  "Ref": "BackfillDashsalesDashctiDashstoreLambdaFunction"
                },
                "BackfillDashsalesDashctiDashtenantLambdaFunctionParameter": {
                  "Ref": "BackfillDashsalesDashctiDashtenantLambdaFunction"
                },
                "BackfillDashsalesDashctiDashunitLambdaFunctionParameter": {
                  "Ref": "BackfillDashsalesDashctiDashunitLambdaFunction"
                },
                "BackfillDashsalesDashrcisDashcategoryLambdaFunctionParameter": {
                  "Ref": "BackfillDashsalesDashrcisDashcategoryLambdaFunction"
                },
                "MerakiDashdevicesLambdaFunctionParameter": {
                  "Ref": "MerakiDashdevicesLambdaFunction"
                },
                "MerakiDashdevicesDashstatusLambdaFunctionParameter": {
                  "Ref": "MerakiDashdevicesDashstatusLambdaFunction"
                }
              },
              "TemplateURL": {
                "Fn::Join": [
                  "/",
                  [
                    "https://s3.amazonaws.com",
                    {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z",
                    "cloudformation-template-Versions-nested-stack.json"
                  ]
                ]
              }
            },
            "DependsOn": [
              "TransformLambdaFunction",
              "LoadLambdaFunction",
              "ExtractLambdaFunction",
              "AlDashdailyDashtrafficLambdaFunction",
              "AlDashdailyDashtrafficUnderscorerefreshUnderscore8LambdaFunction",
              "AlDashdailyDashtrafficUnderscorerefreshUnderscore15LambdaFunction",
              "AlDashdailyDashtrafficUnderscorerefreshUnderscore22LambdaFunction",
              "AlDashdailyDashtrafficUnderscorerefreshUnderscore29LambdaFunction",
              "AlDashmonthlyDashtrafficLambdaFunction",
              "AlDashdailyDashdwellLambdaFunction",
              "AlDashdailyDashdwellUnderscorerefreshUnderscore8LambdaFunction",
              "AlDashdailyDashdwellUnderscorerefreshUnderscore15LambdaFunction",
              "AlDashdailyDashdwellUnderscorerefreshUnderscore22LambdaFunction",
              "AlDashdailyDashdwellUnderscorerefreshUnderscore29LambdaFunction",
              "AlDashvisitorDashflowLambdaFunction",
              "AlDashvisitorDashflowUnderscorerefreshUnderscore8LambdaFunction",
              "AlDashvisitorDashflowUnderscorerefreshUnderscore15LambdaFunction",
              "AlDashvisitorDashflowUnderscorerefreshUnderscore22LambdaFunction",
              "AlDashvisitorDashflowUnderscorerefreshUnderscore29LambdaFunction",
              "AlDashcrossvisitorLambdaFunction",
              "AlDashsocialwifiLambdaFunction",
              "AlDashsocialwifiUnderscorerefreshUnderscore8LambdaFunction",
              "AlDashsocialwifiUnderscorerefreshUnderscore15LambdaFunction",
              "AlDashsocialwifiUnderscorerefreshUnderscore22LambdaFunction",
              "AlDashsocialwifiUnderscorerefreshUnderscore29LambdaFunction",
              "GfDashgiftcardDashtransactionLambdaFunction",
              "GfDashgiftcardDashinfoLambdaFunction",
              "ScheduleDashsalesDashctiDashunitLambdaFunction",
              "ScheduleDashsalesDashrcisDashcategoryLambdaFunction",
              "BackfillDashsalesDashctiDashcategoryLambdaFunction",
              "BackfillDashsalesDashctiDashprojectLambdaFunction",
              "BackfillDashsalesDashctiDashspaceLambdaFunction",
              "BackfillDashsalesDashctiDashstoreLambdaFunction",
              "BackfillDashsalesDashctiDashtenantLambdaFunction",
              "BackfillDashsalesDashctiDashunitLambdaFunction",
              "BackfillDashsalesDashrcisDashcategoryLambdaFunction",
              "MerakiDashdevicesLambdaFunction",
              "MerakiDashdevicesDashstatusLambdaFunction"
            ]
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "TransformLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.TransformLambdaVersionh75eBk1IJRqP2wbGyRjoZJSeryiISC7d4QXAyw2G0"
              ]
            }
          },
          "LoadLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.LoadLambdaVersionnjTkUOWWsCd9ofpsYHIGhLFBeiXoU8lDZ7Balaiwy0"
              ]
            }
          },
          "ExtractLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.ExtractLambdaVersionIALpQrbsMUy0TVXGavTi16VFBnoOc3YlGXqpCn6Zw"
              ]
            }
          },
          "AlDashdailyDashtrafficLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.AlDashdailyDashtrafficLambdaVersionEidPRNlPfSctcsrCHvDG8NGGlTT3l9Qj3rrBv4Ib8"
              ]
            }
          },
          "AlDashdailyDashtrafficUnderscorerefreshUnderscore8LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.AlDashdailyDashtrafficUnderscorerefreshUnderscore8LambdaVersionV3nf0pfBV2SasRXbxPQTuF2GNMRHeWMssFH1YUTvIOs"
              ]
            }
          },
          "AlDashdailyDashtrafficUnderscorerefreshUnderscore15LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.AlDashdailyDashtrafficUnderscorerefreshUnderscore15LambdaVersionXtG89gv56c7y4pmDcAv7xHTFtH1zY4m72mQAb9qYfc"
              ]
            }
          },
          "AlDashdailyDashtrafficUnderscorerefreshUnderscore22LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.AlDashdailyDashtrafficUnderscorerefreshUnderscore22LambdaVersion94gURHIB58rMd6pCnAfN87pRXePu3Rz8PPJBNvGs"
              ]
            }
          },
          "AlDashdailyDashtrafficUnderscorerefreshUnderscore29LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.AlDashdailyDashtrafficUnderscorerefreshUnderscore29LambdaVersionH8vLyXdLgvYOw3knJJZURgC7pJ1ENbGGF0vvy41pkbQ"
              ]
            }
          },
          "AlDashmonthlyDashtrafficLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.AlDashmonthlyDashtrafficLambdaVersionzc47pMSgLtRfvTDQ7HEcZ2cl7HuYnyta9e4lZRTJ8k"
              ]
            }
          },
          "AlDashdailyDashdwellLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.AlDashdailyDashdwellLambdaVersionLblf127eYbgCCtT0LMDsWnGc36nAEnwWM12HWxJus"
              ]
            }
          },
          "AlDashdailyDashdwellUnderscorerefreshUnderscore8LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.AlDashdailyDashdwellUnderscorerefreshUnderscore8LambdaVersionQwn6kEvak2rlr3iGA6KezBuL2fXKw8ZENFa0G1pDu2c"
              ]
            }
          },
          "AlDashdailyDashdwellUnderscorerefreshUnderscore15LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.AlDashdailyDashdwellUnderscorerefreshUnderscore15LambdaVersionovSys8HbZkfCHVBmOkk1QJ7NMaF97TFBivFXhJ2Q"
              ]
            }
          },
          "AlDashdailyDashdwellUnderscorerefreshUnderscore22LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.AlDashdailyDashdwellUnderscorerefreshUnderscore22LambdaVersionqhcjoZkg1WKK8HMjo693XVy80p8CzneiyZb0u1syzKA"
              ]
            }
          },
          "AlDashdailyDashdwellUnderscorerefreshUnderscore29LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.AlDashdailyDashdwellUnderscorerefreshUnderscore29LambdaVersionvDuriwvESe0nFbpqrTwIyGlWG27h32gi9m2bQ1P0"
              ]
            }
          },
          "AlDashvisitorDashflowLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.AlDashvisitorDashflowLambdaVersiontbF0bv8sEG0hq8M6JQg1A10M3WIeaippxj0FPxqADo"
              ]
            }
          },
          "AlDashvisitorDashflowUnderscorerefreshUnderscore8LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.AlDashvisitorDashflowUnderscorerefreshUnderscore8LambdaVersione11tPsHGzrjTS4QKq5Kp49mqUYWM7yrIR5x13Endo"
              ]
            }
          },
          "AlDashvisitorDashflowUnderscorerefreshUnderscore15LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.AlDashvisitorDashflowUnderscorerefreshUnderscore15LambdaVersiondUqRmuMP5UEvg5eTkwitdQsyUmY0spxpEctlwTXeU"
              ]
            }
          },
          "AlDashvisitorDashflowUnderscorerefreshUnderscore22LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.AlDashvisitorDashflowUnderscorerefreshUnderscore22LambdaVersiongAACqOHEYt2YUFuAx51gcGvciO6kMLvY834Bry0EM"
              ]
            }
          },
          "AlDashvisitorDashflowUnderscorerefreshUnderscore29LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.AlDashvisitorDashflowUnderscorerefreshUnderscore29LambdaVersiont5LbvI9lzScczm82ZOOEjDUXcq2hYdkMn1DblAm0E"
              ]
            }
          },
          "AlDashcrossvisitorLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.AlDashcrossvisitorLambdaVersionetozvl2YW9xiVD48MUUxfgLxduXFcYKf2K77zy2I"
              ]
            }
          },
          "AlDashsocialwifiLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.AlDashsocialwifiLambdaVersion97AeTin47avKHqtiVu7lK9SyCqPWJqHPyS0SEGQnA"
              ]
            }
          },
          "AlDashsocialwifiUnderscorerefreshUnderscore8LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.AlDashsocialwifiUnderscorerefreshUnderscore8LambdaVersionmREgRAeWh8NMA0CLVqvUef4mDzgSqrE2UNupXJwc06Q"
              ]
            }
          },
          "AlDashsocialwifiUnderscorerefreshUnderscore15LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.AlDashsocialwifiUnderscorerefreshUnderscore15LambdaVersionljhxVgVPiRPBw5drCffphmdu1N6DQtAzvoqlBAX1bwY"
              ]
            }
          },
          "AlDashsocialwifiUnderscorerefreshUnderscore22LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.AlDashsocialwifiUnderscorerefreshUnderscore22LambdaVersionOx2vrHTawTeFXlRS3DztTRGF3gy9yawQRZV3033XQ"
              ]
            }
          },
          "AlDashsocialwifiUnderscorerefreshUnderscore29LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.AlDashsocialwifiUnderscorerefreshUnderscore29LambdaVersion6rM2YASc7tqzjTrQ1i4p4qHl6hYaTL0euWfKgxLTg"
              ]
            }
          },
          "GfDashgiftcardDashtransactionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.GfDashgiftcardDashtransactionLambdaVersioniQB9TB1YWSeUmYyzruu6CNWHjFEB56N1yHY1aJzLMX4"
              ]
            }
          },
          "GfDashgiftcardDashinfoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.GfDashgiftcardDashinfoLambdaVersiondoq06TIZRYCmK795GAKKfZRxGfTQekDU3NegiwfWcc"
              ]
            }
          },
          "ScheduleDashsalesDashctiDashunitLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.ScheduleDashsalesDashctiDashunitLambdaVersionNiFXflx8J7qylKG9e74AlyG5JbIguKyHH6Wer9Clzk"
              ]
            }
          },
          "ScheduleDashsalesDashrcisDashcategoryLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.ScheduleDashsalesDashrcisDashcategoryLambdaVersionMect0M4rfRYjw3OU19iMcUWWBc5LwocmpS2J6ajg"
              ]
            }
          },
          "BackfillDashsalesDashctiDashcategoryLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.BackfillDashsalesDashctiDashcategoryLambdaVersionPUak6f9OQpecBVvB7aOXkqB9pQIFH2gvtTlGki626TA"
              ]
            }
          },
          "BackfillDashsalesDashctiDashprojectLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.BackfillDashsalesDashctiDashprojectLambdaVersion90RnRWmY0F8AJOghaSsFIdwLL0Vh3pbQUaDh9YRaY"
              ]
            }
          },
          "BackfillDashsalesDashctiDashspaceLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.BackfillDashsalesDashctiDashspaceLambdaVersioneCzmSfqSexgs4jZzwHWrr3Ht6xtY23aMM3w8LakCRJM"
              ]
            }
          },
          "BackfillDashsalesDashctiDashstoreLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.BackfillDashsalesDashctiDashstoreLambdaVersionPMd2ECkyAU3dImUHLNsQO03UmYtPpYFjPgqRNUhpQT8"
              ]
            }
          },
          "BackfillDashsalesDashctiDashtenantLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.BackfillDashsalesDashctiDashtenantLambdaVersionQBGHD2eCY8G5puZplNRD2OT0nFr59Axei2WgdoN2Uc"
              ]
            }
          },
          "BackfillDashsalesDashctiDashunitLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.BackfillDashsalesDashctiDashunitLambdaVersion3bJ7UrVo5gZtRd9KJbYAtDwdAQMDvAT20rOdzskN0U"
              ]
            }
          },
          "BackfillDashsalesDashrcisDashcategoryLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.BackfillDashsalesDashrcisDashcategoryLambdaVersion3xIGeudRvBqs8O8jFQdTQlNlQgdClT6tbiOK9YK6M"
              ]
            }
          },
          "MerakiDashdevicesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.MerakiDashdevicesLambdaVersionSh2ciN2OtgbkgOsbpvFpd2c4TAsqCB6n3zlB2LLeEI"
              ]
            }
          },
          "MerakiDashdevicesDashstatusLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.MerakiDashdevicesDashstatusLambdaVersionQUyNStZFhHAG3IOytljbppmOFLxCnnLQTXAQNCA8"
              ]
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Fn::GetAtt": [
                      "APINestedStack",
                      "Outputs.ApiGatewayRestApi"
                    ]
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "alerts": {
        "topics": {
          "alarm": {
            "topic": "cf-domo-loader-alerts-alarm",
            "notifications": [
              {
                "protocol": "email",
                "endpoint": "alessandro.lenares@cadillacfairview.com"
              }
            ]
          }
        },
        "alarms": null
      }
    },
    "plugins": [
      "serverless-plugin-split-stacks",
      "serverless-plugin-aws-alerts",
      "serverless-offline"
    ],
    "pluginsData": {},
    "functions": {
      "transform": {
        "environment": {
          "apikey": "efc5ffe26768428e101139aece9af70b"
        },
        "handler": "handlers/main.transform",
        "timeout": 300,
        "events": [],
        "name": "cf-domo-loader-dev-transform",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "load": {
        "environment": {
          "apikey": "efc5ffe26768428e101139aece9af70b"
        },
        "handler": "handlers/main.load",
        "timeout": 300,
        "events": [],
        "name": "cf-domo-loader-dev-load",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "extract": {
        "environment": {
          "merakikey": "7640451cf175e0081031c7b251c8ae125ae6668f",
          "apikey": "efc5ffe26768428e101139aece9af70b",
          "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8",
          "maxretries": 5
        },
        "handler": "handlers/main.extract",
        "timeout": 300,
        "events": [],
        "name": "cf-domo-loader-dev-extract",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "al-daily-traffic": {
        "environment": {
          "apikey": "efc5ffe26768428e101139aece9af70b",
          "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
        },
        "handler": "scheduling/aislelabs_dashboard.getDailyTraffic",
        "alarms": [
          "functionErrors"
        ],
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/aislelabs/dailyTraffic"
          },
          {
            "schedule": "cron(0 9 * * ? *)"
          }
        ],
        "name": "cf-domo-loader-dev-al-daily-traffic",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "al-daily-traffic_refresh_8": {
        "environment": {
          "apikey": "efc5ffe26768428e101139aece9af70b",
          "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
        },
        "handler": "scheduling/aislelabs_dashboard.getDailyTraffic_refresh_8",
        "alarms": [
          "functionErrors"
        ],
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/aislelabs/dailyTraffic"
          },
          {
            "schedule": "cron(0 0 * * ? *)"
          }
        ],
        "name": "cf-domo-loader-dev-al-daily-traffic_refresh_8",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "al-daily-traffic_refresh_15": {
        "environment": {
          "apikey": "efc5ffe26768428e101139aece9af70b",
          "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
        },
        "handler": "scheduling/aislelabs_dashboard.getDailyTraffic_refresh_15",
        "alarms": [
          "functionErrors"
        ],
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/aislelabs/dailyTraffic"
          },
          {
            "schedule": "cron(30 00 * * ? *)"
          }
        ],
        "name": "cf-domo-loader-dev-al-daily-traffic_refresh_15",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "al-daily-traffic_refresh_22": {
        "environment": {
          "apikey": "efc5ffe26768428e101139aece9af70b",
          "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
        },
        "handler": "scheduling/aislelabs_dashboard.getDailyTraffic_refresh_22",
        "alarms": [
          "functionErrors"
        ],
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/aislelabs/dailyTraffic"
          },
          {
            "schedule": "cron(00 1 * * ? *)"
          }
        ],
        "name": "cf-domo-loader-dev-al-daily-traffic_refresh_22",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "al-daily-traffic_refresh_29": {
        "environment": {
          "apikey": "efc5ffe26768428e101139aece9af70b",
          "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
        },
        "handler": "scheduling/aislelabs_dashboard.getDailyTraffic_refresh_29",
        "alarms": [
          "functionErrors"
        ],
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/aislelabs/dailyTraffic"
          },
          {
            "schedule": "cron(30 1 * * ? *)"
          }
        ],
        "name": "cf-domo-loader-dev-al-daily-traffic_refresh_29",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "al-monthly-traffic": {
        "environment": {
          "apikey": "efc5ffe26768428e101139aece9af70b",
          "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
        },
        "handler": "scheduling/aislelabs_dashboard.getMonthlyTraffic",
        "alarms": [
          "functionErrors"
        ],
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/aislelabs/monthlyTraffic"
          },
          {
            "schedule": "cron(30 9 * * ? *)"
          }
        ],
        "name": "cf-domo-loader-dev-al-monthly-traffic",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "al-daily-dwell": {
        "environment": {
          "apikey": "efc5ffe26768428e101139aece9af70b",
          "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
        },
        "handler": "scheduling/aislelabs_dashboard.getDailyDwell",
        "alarms": [
          "functionErrors"
        ],
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/aislelabs/dailyDwell"
          },
          {
            "schedule": "cron(0 10 * * ? *)"
          }
        ],
        "name": "cf-domo-loader-dev-al-daily-dwell",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "al-daily-dwell_refresh_8": {
        "environment": {
          "apikey": "efc5ffe26768428e101139aece9af70b",
          "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
        },
        "handler": "scheduling/aislelabs_dashboard.getDailyDwell_refresh_8",
        "alarms": [
          "functionErrors"
        ],
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/aislelabs/dailyDwell"
          },
          {
            "schedule": "cron(00 2 * * ? *)"
          }
        ],
        "name": "cf-domo-loader-dev-al-daily-dwell_refresh_8",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "al-daily-dwell_refresh_15": {
        "environment": {
          "apikey": "efc5ffe26768428e101139aece9af70b",
          "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
        },
        "handler": "scheduling/aislelabs_dashboard.getDailyDwell_refresh_15",
        "alarms": [
          "functionErrors"
        ],
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/aislelabs/dailyDwell"
          },
          {
            "schedule": "cron(30 2 * * ? *)"
          }
        ],
        "name": "cf-domo-loader-dev-al-daily-dwell_refresh_15",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "al-daily-dwell_refresh_22": {
        "environment": {
          "apikey": "efc5ffe26768428e101139aece9af70b",
          "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
        },
        "handler": "scheduling/aislelabs_dashboard.getDailyDwell_refresh_22",
        "alarms": [
          "functionErrors"
        ],
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/aislelabs/dailyDwell"
          },
          {
            "schedule": "cron(00 3 * * ? *)"
          }
        ],
        "name": "cf-domo-loader-dev-al-daily-dwell_refresh_22",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "al-daily-dwell_refresh_29": {
        "environment": {
          "apikey": "efc5ffe26768428e101139aece9af70b",
          "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
        },
        "handler": "scheduling/aislelabs_dashboard.getDailyDwell_refresh_29",
        "alarms": [
          "functionErrors"
        ],
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/aislelabs/dailyDwell"
          },
          {
            "schedule": "cron(30 3 * * ? *)"
          }
        ],
        "name": "cf-domo-loader-dev-al-daily-dwell_refresh_29",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "al-visitor-flow": {
        "environment": {
          "apikey": "efc5ffe26768428e101139aece9af70b",
          "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
        },
        "handler": "scheduling/aislelabs_visitor_flow.get",
        "alarms": [
          "functionErrors"
        ],
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/aislelabs/visitorFlow"
          },
          {
            "schedule": "cron(30 10 * * ? *)"
          }
        ],
        "name": "cf-domo-loader-dev-al-visitor-flow",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "al-visitor-flow_refresh_8": {
        "environment": {
          "apikey": "efc5ffe26768428e101139aece9af70b",
          "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
        },
        "handler": "scheduling/aislelabs_visitor_flow.get_refresh_8",
        "alarms": [
          "functionErrors"
        ],
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/aislelabs/visitorFlow"
          },
          {
            "schedule": "cron(00 4 * * ? *)"
          }
        ],
        "name": "cf-domo-loader-dev-al-visitor-flow_refresh_8",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "al-visitor-flow_refresh_15": {
        "environment": {
          "apikey": "efc5ffe26768428e101139aece9af70b",
          "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
        },
        "handler": "scheduling/aislelabs_visitor_flow.get_refresh_15",
        "alarms": [
          "functionErrors"
        ],
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/aislelabs/visitorFlow"
          },
          {
            "schedule": "cron(30 4 * * ? *)"
          }
        ],
        "name": "cf-domo-loader-dev-al-visitor-flow_refresh_15",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "al-visitor-flow_refresh_22": {
        "environment": {
          "apikey": "efc5ffe26768428e101139aece9af70b",
          "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
        },
        "handler": "scheduling/aislelabs_visitor_flow.get_refresh_22",
        "alarms": [
          "functionErrors"
        ],
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/aislelabs/visitorFlow"
          },
          {
            "schedule": "cron(00 5 * * ? *)"
          }
        ],
        "name": "cf-domo-loader-dev-al-visitor-flow_refresh_22",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "al-visitor-flow_refresh_29": {
        "environment": {
          "apikey": "efc5ffe26768428e101139aece9af70b",
          "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
        },
        "handler": "scheduling/aislelabs_visitor_flow.get_refresh_29",
        "alarms": [
          "functionErrors"
        ],
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/aislelabs/visitorFlow"
          },
          {
            "schedule": "cron(30 5 * * ? *)"
          }
        ],
        "name": "cf-domo-loader-dev-al-visitor-flow_refresh_29",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "al-crossvisitor": {
        "environment": {
          "apikey": "efc5ffe26768428e101139aece9af70b",
          "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
        },
        "handler": "scheduling/aislelabs_crossvisitor.get",
        "alarms": [
          "functionErrors"
        ],
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/aislelabs/crossvisitor"
          },
          {
            "schedule": "cron(0 11 * * ? *)"
          }
        ],
        "name": "cf-domo-loader-dev-al-crossvisitor",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "al-socialwifi": {
        "environment": {
          "apikey": "efc5ffe26768428e101139aece9af70b",
          "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
        },
        "handler": "scheduling/aislelabs_socialwifi.get",
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/aislelabs/socialwifi"
          },
          {
            "schedule": "cron(30 11 * * ? *)"
          }
        ],
        "name": "cf-domo-loader-dev-al-socialwifi",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "al-socialwifi_refresh_8": {
        "environment": {
          "apikey": "efc5ffe26768428e101139aece9af70b",
          "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
        },
        "handler": "scheduling/aislelabs_socialwifi.get_refresh_8",
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/aislelabs/socialwifi"
          },
          {
            "schedule": "cron(00 13 * * ? *)"
          }
        ],
        "name": "cf-domo-loader-dev-al-socialwifi_refresh_8",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "al-socialwifi_refresh_15": {
        "environment": {
          "apikey": "efc5ffe26768428e101139aece9af70b",
          "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
        },
        "handler": "scheduling/aislelabs_socialwifi.get_refresh_15",
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/aislelabs/socialwifi"
          },
          {
            "schedule": "cron(00 14 * * ? *)"
          }
        ],
        "name": "cf-domo-loader-dev-al-socialwifi_refresh_15",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "al-socialwifi_refresh_22": {
        "environment": {
          "apikey": "efc5ffe26768428e101139aece9af70b",
          "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
        },
        "handler": "scheduling/aislelabs_socialwifi.get_refresh_22",
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/aislelabs/socialwifi"
          },
          {
            "schedule": "cron(00 15 * * ? *)"
          }
        ],
        "name": "cf-domo-loader-dev-al-socialwifi_refresh_22",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "al-socialwifi_refresh_29": {
        "environment": {
          "apikey": "efc5ffe26768428e101139aece9af70b",
          "apikey2": "e0eaeeefec462beef5e64f34bfbd21b8"
        },
        "handler": "scheduling/aislelabs_socialwifi.get_refresh_29",
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/aislelabs/socialwifi"
          },
          {
            "schedule": "cron(00 16 * * ? *)"
          }
        ],
        "name": "cf-domo-loader-dev-al-socialwifi_refresh_29",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "gf-giftcard-transaction": {
        "handler": "scheduling/s3_gift_cards.getGiftCardTransaction",
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/giftcard/giftcardTransaction"
          },
          {
            "schedule": "cron(45 12 * * ? *)"
          }
        ],
        "name": "cf-domo-loader-dev-gf-giftcard-transaction",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "gf-giftcard-info": {
        "handler": "scheduling/s3_gift_cards.getGiftCardInfo",
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/giftcard/giftcardInfo"
          },
          {
            "schedule": "cron(30 12 * * ? *)"
          }
        ],
        "name": "cf-domo-loader-dev-gf-giftcard-info",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "schedule-sales-cti-unit": {
        "handler": "scheduling/s3_sales.schedule_cti_unit",
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/schedule_sales_cti_unit"
          }
        ],
        "name": "cf-domo-loader-dev-schedule-sales-cti-unit",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "schedule-sales-rcis-category": {
        "handler": "scheduling/s3_sales.schedule_rcis_category",
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/schedule_sales_rcis_category"
          }
        ],
        "name": "cf-domo-loader-dev-schedule-sales-rcis-category",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "backfill-sales-cti-category": {
        "handler": "scheduling/s3_sales.backfill_cti_category",
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/backfill_sales_cti_category"
          }
        ],
        "name": "cf-domo-loader-dev-backfill-sales-cti-category",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "backfill-sales-cti-project": {
        "handler": "scheduling/s3_sales.backfill_cti_project",
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/backfill_sales_cti_project"
          }
        ],
        "name": "cf-domo-loader-dev-backfill-sales-cti-project",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "backfill-sales-cti-space": {
        "handler": "scheduling/s3_sales.backfill_cti_space",
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/backfill_sales_cti_space"
          }
        ],
        "name": "cf-domo-loader-dev-backfill-sales-cti-space",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "backfill-sales-cti-store": {
        "handler": "scheduling/s3_sales.backfill_cti_store",
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/backfill_sales_cti_store"
          }
        ],
        "name": "cf-domo-loader-dev-backfill-sales-cti-store",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "backfill-sales-cti-tenant": {
        "handler": "scheduling/s3_sales.backfill_cti_tenant",
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/backfill_sales_cti_tenant"
          }
        ],
        "name": "cf-domo-loader-dev-backfill-sales-cti-tenant",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "backfill-sales-cti-unit": {
        "handler": "scheduling/s3_sales.backfill_cti_unit",
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/backfill_sales_cti_unit"
          }
        ],
        "name": "cf-domo-loader-dev-backfill-sales-cti-unit",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "backfill-sales-rcis-category": {
        "handler": "scheduling/s3_sales.backfill_rcis_category",
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/backfill_sales_rcis_category"
          }
        ],
        "name": "cf-domo-loader-dev-backfill-sales-rcis-category",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "meraki-devices": {
        "environment": {
          "merakikey": "7640451cf175e0081031c7b251c8ae125ae6668f"
        },
        "handler": "scheduling/meraki.getDevices",
        "alarms": [
          "functionErrors"
        ],
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/meraki/devices"
          }
        ],
        "name": "cf-domo-loader-dev-meraki-devices",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "meraki-devices-status": {
        "environment": {
          "merakikey": "7640451cf175e0081031c7b251c8ae125ae6668f"
        },
        "handler": "scheduling/meraki.getDevicesStatus",
        "alarms": [
          "functionErrors"
        ],
        "timeout": 30,
        "events": [
          {
            "http": "GET v1/meraki/devicesStatus"
          }
        ],
        "name": "cf-domo-loader-dev-meraki-devices-status",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs10.x",
        "vpc": {}
      }
    },
    "resources": {
      "Resources": {
        "ExtractKinesis": {
          "Type": "AWS::Kinesis::Stream",
          "Properties": {
            "Name": "CF_ExtractKinesis",
            "ShardCount": 2
          }
        },
        "ExtractKinesisMap": {
          "Type": "AWS::Lambda::EventSourceMapping",
          "DependsOn": [
            "ExtractLambdaFunction"
          ],
          "Properties": {
            "BatchSize": 1,
            "EventSourceArn": {
              "Fn::GetAtt": [
                "ExtractKinesis",
                "Arn"
              ]
            },
            "FunctionName": {
              "Fn::GetAtt": [
                "ExtractLambdaFunction",
                "Arn"
              ]
            },
            "StartingPosition": "TRIM_HORIZON"
          }
        },
        "DomoLoaderKinesis": {
          "Type": "AWS::Kinesis::Stream",
          "Properties": {
            "Name": "CF_DomoLoaderKinesis",
            "ShardCount": 2
          }
        },
        "LoaderKinesisMap": {
          "Type": "AWS::Lambda::EventSourceMapping",
          "DependsOn": [
            "LoadLambdaFunction"
          ],
          "Properties": {
            "BatchSize": 10000,
            "EventSourceArn": {
              "Fn::GetAtt": [
                "DomoLoaderKinesis",
                "Arn"
              ]
            },
            "FunctionName": {
              "Fn::GetAtt": [
                "LoadLambdaFunction",
                "Arn"
              ]
            },
            "StartingPosition": "TRIM_HORIZON"
          }
        }
      },
      "Outputs": {}
    },
    "serviceFilename": "serverless.yml",
    "layers": {},
    "artifact": "/home/ec2-user/environment/CF-Slalom-API-Refresh/traffic/lambda/cf-domo-loader-test-al-daily-traffic/.serverless/cf-domo-loader.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/cf-domo-loader/dev/1565742808499-2019-08-14T00:33:28.499Z",
    "artifact": "cf-domo-loader.zip"
  }
}